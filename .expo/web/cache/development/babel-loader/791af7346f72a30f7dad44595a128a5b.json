{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _excluded = [\"index\"],\n    _excluded2 = [\"style\", \"children\", \"swipeEnabled\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_native_1 = require(\"react-native\");\n\nvar devsupport_1 = require(\"../../devsupport\");\n\nvar ViewPager = function (_react_1$default$Comp) {\n  _inherits(ViewPager, _react_1$default$Comp);\n\n  var _super = _createSuper(ViewPager);\n\n  function ViewPager() {\n    var _this;\n\n    _classCallCheck(this, ViewPager);\n\n    _this = _super.apply(this, arguments);\n    _this.containerRef = react_1.default.createRef();\n    _this.contentWidth = 0;\n    _this.contentOffsetValue = 0;\n    _this.contentOffset = new react_native_1.Animated.Value(_this.contentOffsetValue);\n    _this.panResponder = react_native_1.PanResponder.create(_assertThisInitialized(_this));\n\n    _this.onMoveShouldSetPanResponder = function (_event, state) {\n      var isHorizontalMove = Math.abs(state.dx) > 0 && Math.abs(state.dx) > Math.abs(state.dy);\n\n      if (isHorizontalMove) {\n        var i18nOffset = devsupport_1.RTLService.select(state.dx, -state.dx);\n        var nextSelectedIndex = _this.props.selectedIndex - Math.sign(i18nOffset);\n        return nextSelectedIndex >= 0 && nextSelectedIndex < _this.children.length;\n      }\n\n      return false;\n    };\n\n    _this.onPanResponderMove = function (_event, state) {\n      var i18nOffset = devsupport_1.RTLService.select(_this.contentWidth, -_this.contentWidth);\n      var selectedPageOffset = _this.props.selectedIndex * i18nOffset;\n\n      _this.contentOffset.setValue(state.dx - selectedPageOffset);\n    };\n\n    _this.onPanResponderRelease = function (event, state) {\n      if (Math.abs(state.vx) >= 0.5 || Math.abs(state.dx) >= 0.5 * _this.contentWidth) {\n        var i18nOffset = devsupport_1.RTLService.select(state.dx, -state.dx);\n        var index = i18nOffset > 0 ? _this.props.selectedIndex - 1 : _this.props.selectedIndex + 1;\n\n        _this.scrollToIndex({\n          index: index,\n          animated: true\n        });\n      } else {\n        var _index = _this.props.selectedIndex;\n\n        _this.scrollToIndex({\n          index: _index,\n          animated: true\n        });\n      }\n    };\n\n    _this.scrollToOffset = function (params) {\n      _this.createOffsetAnimation(params).start(_this.onContentOffsetAnimationStateEnd);\n    };\n\n    _this.onLayout = function (event) {\n      _this.contentWidth = event.nativeEvent.layout.width / _this.children.length;\n\n      _this.scrollToIndex({\n        index: _this.props.selectedIndex\n      });\n    };\n\n    _this.onContentOffsetAnimationStateChanged = function (state) {\n      _this.contentOffsetValue = devsupport_1.RTLService.select(-state.value, state.value);\n\n      if (_this.props.onOffsetChange) {\n        _this.props.onOffsetChange(_this.contentOffsetValue);\n      }\n    };\n\n    _this.onContentOffsetAnimationStateEnd = function (_result) {\n      var selectedIndex = _this.contentOffsetValue / _this.contentWidth;\n\n      if (selectedIndex !== _this.props.selectedIndex && _this.props.onSelect) {\n        _this.props.onSelect(Math.round(selectedIndex));\n      }\n    };\n\n    _this.createOffsetAnimation = function (params) {\n      var animationDuration = params.animated ? 300 : 0;\n      return react_native_1.Animated.timing(_this.contentOffset, {\n        toValue: devsupport_1.RTLService.select(-params.offset, params.offset),\n        easing: react_native_1.Easing.linear,\n        duration: animationDuration,\n        useNativeDriver: react_native_1.Platform.OS !== 'web'\n      });\n    };\n\n    _this.getContainerStyle = function () {\n      return {\n        width: 100 * _this.children.length + \"%\",\n        transform: [{\n          translateX: _this.contentOffset\n        }]\n      };\n    };\n\n    _this.renderComponentChild = function (source, index) {\n      var contentView = _this.props.shouldLoadComponent(index) ? source : null;\n      return react_1.default.createElement(react_native_1.View, {\n        style: styles.contentContainer\n      }, contentView);\n    };\n\n    _this.renderComponentChildren = function () {\n      return react_1.default.Children.map(_this.children, _this.renderComponentChild);\n    };\n\n    return _this;\n  }\n\n  _createClass(ViewPager, [{\n    key: \"children\",\n    get: function get() {\n      return react_1.default.Children.toArray(this.props.children).filter(Boolean);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.selectedIndex !== this.props.selectedIndex) {\n        var index = this.props.selectedIndex;\n        this.scrollToIndex({\n          index: index,\n          animated: true\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.contentOffset.removeAllListeners();\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var index = params.index,\n          rest = _objectWithoutProperties(params, _excluded);\n\n      var childCount = this.children.length - 1;\n      var offset = this.contentWidth * (index < 0 ? 0 : index > childCount ? childCount : index);\n      this.scrollToOffset(_extends({\n        offset: offset\n      }, rest));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          children = _this$props.children,\n          swipeEnabled = _this$props.swipeEnabled,\n          viewProps = _objectWithoutProperties(_this$props, _excluded2);\n\n      var panResponderConfig = swipeEnabled ? this.panResponder.panHandlers : null;\n\n      var animatedViewProps = _extends({}, viewProps, panResponderConfig);\n\n      return react_1.default.createElement(react_native_1.Animated.View, _extends({}, animatedViewProps, {\n        style: [styles.container, style, this.getContainerStyle()],\n        onLayout: this.onLayout,\n        ref: this.containerRef\n      }), this.renderComponentChildren());\n    }\n  }]);\n\n  return ViewPager;\n}(react_1.default.Component);\n\nexports.ViewPager = ViewPager;\nViewPager.defaultProps = {\n  selectedIndex: 0,\n  swipeEnabled: true,\n  shouldLoadComponent: function shouldLoadComponent() {\n    return true;\n  }\n};\nvar styles = react_native_1.StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  },\n  contentContainer: {\n    flex: 1,\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["../../../../../src/components/ui/viewPager/viewPager.component.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst devsupport_1 = require(\"../../devsupport\");\n/**\n * A view with a set of swipeable pages.\n *\n * @extends React.Component\n **\n * @property {ReactNode} children - Page components to render within the view.\n *\n * @property {number} selectedIndex - Index of currently selected view.\n *\n * @property {boolean} swipeEnabled - Disable swipe gesture, but keeping animations.\n *\n * @property {(number) => void} onSelect - Called when view becomes visible.\n *\n * @property {(number) => boolean} shouldLoadComponent - A function to determine\n * whether particular view should be rendered.\n * Useful when providing \"lazy\" loading behavior.\n *\n * @property {(number) => void} onOffsetChange - Called when scroll offset changes.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example ViewPagerSimpleUsage\n * Simple usage.\n *\n * @overview-example ViewPagerLazyLoading\n * Each view can be loaded lazily by using `shouldLoadComponent` property.\n */\nclass ViewPager extends react_1.default.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = react_1.default.createRef();\n        this.contentWidth = 0;\n        this.contentOffsetValue = 0;\n        this.contentOffset = new react_native_1.Animated.Value(this.contentOffsetValue);\n        this.panResponder = react_native_1.PanResponder.create(this);\n        this.onMoveShouldSetPanResponder = (_event, state) => {\n            const isHorizontalMove = Math.abs(state.dx) > 0 && Math.abs(state.dx) > Math.abs(state.dy);\n            if (isHorizontalMove) {\n                const i18nOffset = devsupport_1.RTLService.select(state.dx, -state.dx);\n                const nextSelectedIndex = this.props.selectedIndex - Math.sign(i18nOffset);\n                return nextSelectedIndex >= 0 && nextSelectedIndex < this.children.length;\n            }\n            return false;\n        };\n        this.onPanResponderMove = (_event, state) => {\n            const i18nOffset = devsupport_1.RTLService.select(this.contentWidth, -this.contentWidth);\n            const selectedPageOffset = this.props.selectedIndex * i18nOffset;\n            this.contentOffset.setValue(state.dx - selectedPageOffset);\n        };\n        this.onPanResponderRelease = (event, state) => {\n            if (Math.abs(state.vx) >= 0.5 || Math.abs(state.dx) >= 0.5 * this.contentWidth) {\n                const i18nOffset = devsupport_1.RTLService.select(state.dx, -state.dx);\n                const index = i18nOffset > 0 ? this.props.selectedIndex - 1 : this.props.selectedIndex + 1;\n                this.scrollToIndex({ index, animated: true });\n            }\n            else {\n                const index = this.props.selectedIndex;\n                this.scrollToIndex({ index, animated: true });\n            }\n        };\n        this.scrollToOffset = (params) => {\n            this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n        };\n        this.onLayout = (event) => {\n            this.contentWidth = event.nativeEvent.layout.width / this.children.length;\n            this.scrollToIndex({ index: this.props.selectedIndex });\n        };\n        this.onContentOffsetAnimationStateChanged = (state) => {\n            this.contentOffsetValue = devsupport_1.RTLService.select(-state.value, state.value);\n            if (this.props.onOffsetChange) {\n                this.props.onOffsetChange(this.contentOffsetValue);\n            }\n        };\n        this.onContentOffsetAnimationStateEnd = (_result) => {\n            const selectedIndex = this.contentOffsetValue / this.contentWidth;\n            if (selectedIndex !== this.props.selectedIndex && this.props.onSelect) {\n                this.props.onSelect(Math.round(selectedIndex));\n            }\n        };\n        this.createOffsetAnimation = (params) => {\n            const animationDuration = params.animated ? 300 : 0;\n            return react_native_1.Animated.timing(this.contentOffset, {\n                toValue: devsupport_1.RTLService.select(-params.offset, params.offset),\n                easing: react_native_1.Easing.linear,\n                duration: animationDuration,\n                useNativeDriver: react_native_1.Platform.OS !== 'web',\n            });\n        };\n        this.getContainerStyle = () => {\n            return {\n                width: `${100 * this.children.length}%`,\n                // @ts-ignore: RN has no types for `Animated` styles\n                transform: [{ translateX: this.contentOffset }],\n            };\n        };\n        this.renderComponentChild = (source, index) => {\n            const contentView = this.props.shouldLoadComponent(index) ? source : null;\n            return (react_1.default.createElement(react_native_1.View, { style: styles.contentContainer }, contentView));\n        };\n        this.renderComponentChildren = () => {\n            return react_1.default.Children.map(this.children, this.renderComponentChild);\n        };\n    }\n    get children() {\n        return react_1.default.Children.toArray(this.props.children).filter(Boolean);\n    }\n    componentDidMount() {\n        this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.selectedIndex !== this.props.selectedIndex) {\n            const index = this.props.selectedIndex;\n            this.scrollToIndex({ index, animated: true });\n        }\n    }\n    componentWillUnmount() {\n        this.contentOffset.removeAllListeners();\n    }\n    scrollToIndex(params) {\n        const { index, ...rest } = params;\n        const childCount = this.children.length - 1;\n        const offset = this.contentWidth * (index < 0 ? 0 : index > childCount ? childCount : index);\n        this.scrollToOffset({ offset, ...rest });\n    }\n    render() {\n        const { style, children, swipeEnabled, ...viewProps } = this.props;\n        const panResponderConfig = swipeEnabled ? this.panResponder.panHandlers : null;\n        const animatedViewProps = { ...viewProps, ...panResponderConfig };\n        return (react_1.default.createElement(react_native_1.Animated.View, Object.assign({}, animatedViewProps, { style: [styles.container, style, this.getContainerStyle()], onLayout: this.onLayout, \n            // @ts-ignore\n            ref: this.containerRef }), this.renderComponentChildren()));\n    }\n}\nexports.ViewPager = ViewPager;\nViewPager.defaultProps = {\n    selectedIndex: 0,\n    swipeEnabled: true,\n    shouldLoadComponent: () => true,\n};\nconst styles = react_native_1.StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n    },\n    contentContainer: {\n        flex: 1,\n        width: '100%',\n    },\n});\n//# sourceMappingURL=viewPager.component.js.map"]},"metadata":{},"sourceType":"script"}