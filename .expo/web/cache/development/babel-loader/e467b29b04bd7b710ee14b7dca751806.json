{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_native_1 = require(\"react-native\");\n\nvar devsupport_1 = require(\"../../devsupport\");\n\nvar theme_1 = require(\"../../theme\");\n\nvar popoverView_component_1 = require(\"./popoverView.component\");\n\nvar placement_service_1 = require(\"./placement.service\");\n\nvar type_1 = require(\"./type\");\n\nvar Popover = function (_react_1$default$Comp) {\n  _inherits(Popover, _react_1$default$Comp);\n\n  var _super = _createSuper(Popover);\n\n  function Popover() {\n    var _this;\n\n    _classCallCheck(this, Popover);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      childFrame: devsupport_1.Frame.zero(),\n      anchorFrame: devsupport_1.Frame.zero(),\n      forceMeasure: false\n    };\n    _this.contentPosition = devsupport_1.Point.outscreen();\n    _this.placementService = new placement_service_1.PopoverPlacementService();\n    _this.actualPlacement = _this.preferredPlacement;\n\n    _this.show = function () {\n      if (!_this.isPopoverUnmounted) {\n        _this.modalId = theme_1.ModalService.show(_this.renderMeasuringPopoverElement(), _this.backdropConfig);\n      }\n    };\n\n    _this.hide = function () {\n      _this.modalId = theme_1.ModalService.hide(_this.modalId);\n    };\n\n    _this.onHardwareBackPress = function () {\n      _this.hide();\n\n      return false;\n    };\n\n    _this.onChildMeasure = function (childFrame) {\n      _this.state.childFrame = childFrame;\n\n      if (!_this.modalId && _this.props.visible) {\n        _this.show();\n\n        return;\n      }\n\n      if (_this.modalId && _this.props.visible) {\n        theme_1.ModalService.update(_this.modalId, _this.renderPopoverElement());\n      }\n    };\n\n    _this.onContentMeasure = function (anchorFrame) {\n      _this.state.anchorFrame = anchorFrame;\n\n      var placementOptions = _this.findPlacementOptions(anchorFrame, _this.state.childFrame);\n\n      _this.actualPlacement = _this.placementService.find(_this.preferredPlacement, placementOptions);\n\n      var displayFrame = _this.actualPlacement.frame(placementOptions);\n\n      _this.contentPosition = displayFrame.origin;\n      theme_1.ModalService.update(_this.modalId, _this.renderPopoverElement());\n    };\n\n    _this.findPlacementOptions = function (contentFrame, childFrame) {\n      var width = _this.props.fullWidth ? childFrame.size.width : contentFrame.size.width;\n      var frame = new devsupport_1.Frame(contentFrame.origin.x, contentFrame.origin.y, width, contentFrame.size.height);\n      return new type_1.PlacementOptions(frame, childFrame, devsupport_1.Frame.window(), devsupport_1.Frame.zero());\n    };\n\n    _this.renderContentElement = function () {\n      var contentElement = _this.props.children;\n      var fullWidthStyle = {\n        width: _this.state.childFrame.size.width\n      };\n      return react_1.default.cloneElement(contentElement, {\n        style: [_this.props.fullWidth && fullWidthStyle, contentElement.props.style]\n      });\n    };\n\n    _this.renderPopoverElement = function () {\n      return react_1.default.createElement(popoverView_component_1.PopoverView, _extends({}, _this.props, {\n        contentContainerStyle: [_this.props.contentContainerStyle, styles.popoverView, _this.contentFlexPosition],\n        placement: _this.actualPlacement.reverse()\n      }), _this.renderContentElement());\n    };\n\n    _this.renderMeasuringPopoverElement = function () {\n      return react_1.default.createElement(devsupport_1.MeasureElement, {\n        shouldUseTopInsets: theme_1.ModalService.getShouldUseTopInsets,\n        onMeasure: _this.onContentMeasure\n      }, _this.renderPopoverElement());\n    };\n\n    return _this;\n  }\n\n  _createClass(Popover, [{\n    key: \"preferredPlacement\",\n    get: function get() {\n      return type_1.PopoverPlacements.parse(this.props.placement);\n    }\n  }, {\n    key: \"contentFlexPosition\",\n    get: function get() {\n      var _this$contentPosition = this.contentPosition,\n          left = _this$contentPosition.x,\n          top = _this$contentPosition.y;\n      return {\n        left: left,\n        top: top\n      };\n    }\n  }, {\n    key: \"backdropConfig\",\n    get: function get() {\n      var _this$props = this.props,\n          onBackdropPress = _this$props.onBackdropPress,\n          backdropStyle = _this$props.backdropStyle;\n      return {\n        onBackdropPress: onBackdropPress,\n        backdropStyle: backdropStyle\n      };\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!this.modalId && this.props.visible && !this.state.forceMeasure) {\n        this.setState({\n          forceMeasure: true\n        });\n        return;\n      }\n\n      if (this.modalId && !this.props.visible) {\n        this.contentPosition = devsupport_1.Point.outscreen();\n        this.hide();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (react_native_1.Platform.OS === 'android') {\n        this.hardwareBackSubscription = react_native_1.BackHandler.addEventListener('hardwareBackPress', this.onHardwareBackPress);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$hardwareBackSub;\n\n      (_this$hardwareBackSub = this.hardwareBackSubscription) == null ? void 0 : _this$hardwareBackSub.remove();\n      this.hide();\n      this.isPopoverUnmounted = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return react_1.default.createElement(devsupport_1.MeasureElement, {\n        shouldUseTopInsets: theme_1.ModalService.getShouldUseTopInsets,\n        force: this.state.forceMeasure,\n        onMeasure: this.onChildMeasure\n      }, this.props.anchor());\n    }\n  }]);\n\n  return Popover;\n}(react_1.default.Component);\n\nexports.Popover = Popover;\nPopover.defaultProps = {\n  placement: type_1.PopoverPlacements.BOTTOM\n};\nvar styles = react_native_1.StyleSheet.create({\n  popoverView: {\n    position: 'absolute'\n  }\n});","map":{"version":3,"sources":["../../../../../src/components/ui/popover/popover.component.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst devsupport_1 = require(\"../../devsupport\");\nconst theme_1 = require(\"../../theme\");\nconst popoverView_component_1 = require(\"./popoverView.component\");\nconst placement_service_1 = require(\"./placement.service\");\nconst type_1 = require(\"./type\");\n/**\n * Displays a content positioned relative to another view.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets `content` component visible.\n *\n * @method {() => void} hide - Sets `content` component invisible.\n *\n * @property {boolean} visible - Whether content component is visible.\n * Defaults to false.\n * The property is more specific that the show/hide methods, so do not use them at the same time.\n *\n * @property {() => ReactElement} anchor - A component relative to which content component will be shown.\n *\n * @property {ReactElement} children - A component displayed within the popover.\n *\n * @property {() => void} onBackdropPress - Called when popover is visible and the underlying view was touched.\n * Useful when needed to close the modal on outside touches.\n *\n * @property {boolean} fullWidth - Whether a content component should take the width of `anchor`.\n *\n * @property {string | PopoverPlacement} placement - Position of the content component relative to the `anchor`.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example PopoverSimpleUsage\n * Popover accepts it's content as child element and is displayed relative to `anchor` view.\n *\n * @overview-example PopoverPlacement\n * By default, it is displayed to the bottom of `anchor` view, but it is configurable with `placement` property.\n *\n * @overview-example PopoverFullWidth\n * Popover may take the full width of the anchor view by configuring `fullWidth` property.\n *\n * @overview-example PopoverStyledBackdrop\n * To style the underlying view, `backdropStyle` property may be used.\n */\nclass Popover extends react_1.default.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            childFrame: devsupport_1.Frame.zero(),\n            anchorFrame: devsupport_1.Frame.zero(),\n            forceMeasure: false,\n        };\n        this.contentPosition = devsupport_1.Point.outscreen();\n        this.placementService = new placement_service_1.PopoverPlacementService();\n        this.actualPlacement = this.preferredPlacement;\n        this.show = () => {\n            if (!this.isPopoverUnmounted) {\n                this.modalId = theme_1.ModalService.show(this.renderMeasuringPopoverElement(), this.backdropConfig);\n            }\n        };\n        this.hide = () => {\n            this.modalId = theme_1.ModalService.hide(this.modalId);\n        };\n        this.onHardwareBackPress = () => {\n            this.hide();\n            return false;\n        };\n        this.onChildMeasure = (childFrame) => {\n            this.state.childFrame = childFrame;\n            if (!this.modalId && this.props.visible) {\n                this.show();\n                return;\n            }\n            if (this.modalId && this.props.visible) {\n                theme_1.ModalService.update(this.modalId, this.renderPopoverElement());\n            }\n        };\n        this.onContentMeasure = (anchorFrame) => {\n            this.state.anchorFrame = anchorFrame;\n            const placementOptions = this.findPlacementOptions(anchorFrame, this.state.childFrame);\n            this.actualPlacement = this.placementService.find(this.preferredPlacement, placementOptions);\n            const displayFrame = this.actualPlacement.frame(placementOptions);\n            this.contentPosition = displayFrame.origin;\n            theme_1.ModalService.update(this.modalId, this.renderPopoverElement());\n        };\n        this.findPlacementOptions = (contentFrame, childFrame) => {\n            const width = this.props.fullWidth ? childFrame.size.width : contentFrame.size.width;\n            const frame = new devsupport_1.Frame(contentFrame.origin.x, contentFrame.origin.y, width, contentFrame.size.height);\n            return new type_1.PlacementOptions(frame, childFrame, devsupport_1.Frame.window(), devsupport_1.Frame.zero());\n        };\n        this.renderContentElement = () => {\n            const contentElement = this.props.children;\n            const fullWidthStyle = { width: this.state.childFrame.size.width };\n            return react_1.default.cloneElement(contentElement, {\n                style: [this.props.fullWidth && fullWidthStyle, contentElement.props.style],\n            });\n        };\n        this.renderPopoverElement = () => {\n            return (react_1.default.createElement(popoverView_component_1.PopoverView, Object.assign({}, this.props, { contentContainerStyle: [this.props.contentContainerStyle, styles.popoverView, this.contentFlexPosition], placement: this.actualPlacement.reverse() }), this.renderContentElement()));\n        };\n        this.renderMeasuringPopoverElement = () => {\n            return (react_1.default.createElement(devsupport_1.MeasureElement, { shouldUseTopInsets: theme_1.ModalService.getShouldUseTopInsets, onMeasure: this.onContentMeasure }, this.renderPopoverElement()));\n        };\n    }\n    get preferredPlacement() {\n        return type_1.PopoverPlacements.parse(this.props.placement);\n    }\n    get contentFlexPosition() {\n        const { x: left, y: top } = this.contentPosition;\n        return { left, top };\n    }\n    get backdropConfig() {\n        const { onBackdropPress, backdropStyle } = this.props;\n        return {\n            onBackdropPress,\n            backdropStyle,\n        };\n    }\n    componentDidUpdate(prevProps) {\n        if (!this.modalId && this.props.visible && !this.state.forceMeasure) {\n            this.setState({ forceMeasure: true });\n            return;\n        }\n        if (this.modalId && !this.props.visible) {\n            this.contentPosition = devsupport_1.Point.outscreen();\n            this.hide();\n        }\n    }\n    componentDidMount() {\n        if (react_native_1.Platform.OS === 'android') {\n            this.hardwareBackSubscription = react_native_1.BackHandler.addEventListener('hardwareBackPress', this.onHardwareBackPress);\n        }\n    }\n    componentWillUnmount() {\n        this.hardwareBackSubscription?.remove();\n        this.hide();\n        this.isPopoverUnmounted = true;\n    }\n    render() {\n        return (react_1.default.createElement(devsupport_1.MeasureElement, { shouldUseTopInsets: theme_1.ModalService.getShouldUseTopInsets, force: this.state.forceMeasure, onMeasure: this.onChildMeasure }, this.props.anchor()));\n    }\n}\nexports.Popover = Popover;\nPopover.defaultProps = {\n    placement: type_1.PopoverPlacements.BOTTOM,\n};\nconst styles = react_native_1.StyleSheet.create({\n    popoverView: {\n        position: 'absolute',\n    },\n});\n//# sourceMappingURL=popover.component.js.map"]},"metadata":{},"sourceType":"script"}