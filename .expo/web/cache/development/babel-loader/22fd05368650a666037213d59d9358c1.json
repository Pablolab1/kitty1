{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NativeAppearance = void 0;\nexports.NativeAppearanceProvider = NativeAppearanceProvider;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _SyntheticPlatformEmitter = _interopRequireDefault(require(\"./web/SyntheticPlatformEmitter\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar _jsxFileName = \"/Users/brentvatne/code/react-native-appearance/src/NativeAppearance.web.tsx\";\n\nfunction getQuery() {\n  if (typeof window === 'undefined' || !window.matchMedia) return null;\n  return window.matchMedia('(prefers-color-scheme: dark)');\n}\n\nfunction isMediaQueryList(query) {\n  return query && query.addListener && query.removeListener && typeof query.matches === 'boolean';\n}\n\nvar NativeAppearance = {\n  get name() {\n    return 'NativeAppearance';\n  },\n\n  get initialPreferences() {\n    var query = getQuery();\n\n    if (isMediaQueryList(query)) {\n      return {\n        colorScheme: query.matches ? 'dark' : 'light'\n      };\n    }\n\n    return {\n      colorScheme: 'no-preference'\n    };\n  }\n\n};\nexports.NativeAppearance = NativeAppearance;\n\nfunction NativeAppearanceProvider(props) {\n  React.useEffect(function () {\n    var query = getQuery();\n\n    function listener(_ref) {\n      var matches = _ref.matches;\n      var colorScheme = matches ? 'dark' : 'light';\n\n      _SyntheticPlatformEmitter.default.emit('appearanceChanged', {\n        colorScheme: colorScheme\n      });\n    }\n\n    if (query) query.addListener(listener);\n    return function () {\n      if (query) {\n        query.removeListener(listener);\n      }\n    };\n  }, []);\n  return React.createElement(_reactNative.View, (0, _extends2.default)({\n    style: {\n      flex: 1\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    }\n  }));\n}\n\n;","map":{"version":3,"sources":["NativeAppearance.web.tsx"],"names":["window","query","NativeAppearance","getQuery","isMediaQueryList","colorScheme","React","matches","SyntheticPlatformEmitter","flex"],"mappings":";;;;;;;;;;AAAA;;AACA;;AAIA;;;;;;;;AAEA,SAAA,QAAA,GAA2C;EACzC,IAAI,OAAA,MAAA,KAAA,WAAA,IAAiC,CAACA,MAAM,CAA5C,UAAA,EAAyD,OAAA,IAAA;EACzD,OAAOA,MAAM,CAANA,UAAAA,CAAP,8BAAOA,CAAP;AAGF;;AAAA,SAAA,gBAAA,CAAA,KAAA,EAA+D;EAC7D,OAAOC,KAAK,IAAIA,KAAK,CAAdA,WAAAA,IAA8BA,KAAK,CAAnCA,cAAAA,IAAsD,OAAOA,KAAK,CAAZ,OAAA,KAA7D,SAAA;AAGF;;AAAO,IAAMC,gBAAgB,GAAG;EAC9B,IAAA,IAAA,GAAmB;IACjB,OAAA,kBAAA;EAF4B,CAAA;;EAI9B,IAAA,kBAAA,GAAgD;IAC9C,IAAMD,KAAK,GAAGE,QAAd,EAAA;;IACA,IAAIC,gBAAgB,CAApB,KAAoB,CAApB,EAA6B;MAC3B,OAAO;QAAEC,WAAW,EAAEJ,KAAK,CAALA,OAAAA,GAAAA,MAAAA,GAAtB;MAAO,CAAP;IAEF;;IAAA,OAAO;MAAEI,WAAW,EAApB;IAAO,CAAP;EATG;;AAAyB,CAAzB;;;AAaA,SAAA,wBAAA,CAAA,KAAA,EAA8C;EACnDC,KAAK,CAALA,SAAAA,CAAgB,YAAM;IACpB,IAAML,KAAK,GAAGE,QAAd,EAAA;;IAEA,SAAA,QAAA,CAAA,IAAA,EAAoD;MAAhCI,IAAAA,OAAgC,GAAA,IAAA,CAAhCA,OAAAA;MAClB,IAAMF,WAAW,GAAGE,OAAO,GAAA,MAAA,GAA3B,OAAA;;MACAC,iCAAAA,CAAAA,IAAAA,CAAAA,mBAAAA,EAAmD;QACjDH,WAAW,EADbG;MAAmD,CAAnDA;IAKF;;IAAA,IAAA,KAAA,EACEP,KAAK,CAALA,WAAAA,CAAAA,QAAAA;IAEF,OAAO,YAAM;MACX,IAAA,KAAA,EAAW;QACTA,KAAK,CAALA,cAAAA,CAAAA,QAAAA;MAEH;IAJD,CAAA;EAbFK,CAAAA,EAAAA,EAAAA;EAoBA,OAAO,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,IAAA,iBAAA,EAAA;IAAM,KAAK,EAAE;MAAEG,IAAI,EAAnB;IAAa;EAAb,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAP;IAAO;EAAA,CAAA,CAAA,CAAP;AACD;;AAAA","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { AppearancePreferences } from './Appearance.types';\n// @ts-ignore\nimport SyntheticPlatformEmitter from './web/SyntheticPlatformEmitter';\n\nfunction getQuery(): MediaQueryList | null {\n  if (typeof window === 'undefined' || !window.matchMedia) return null;\n  return window.matchMedia('(prefers-color-scheme: dark)');\n}\n\nfunction isMediaQueryList(query: any): query is MediaQueryList {\n  return query && query.addListener && query.removeListener && typeof query.matches === 'boolean';\n}\n\nexport const NativeAppearance = {\n  get name(): string {\n    return 'NativeAppearance';\n  },\n  get initialPreferences(): AppearancePreferences {\n    const query = getQuery();\n    if (isMediaQueryList(query)) {\n      return { colorScheme: query.matches ? 'dark' : 'light' }\n    }\n    return { colorScheme: 'no-preference' };\n  },\n};\n\nexport function NativeAppearanceProvider(props: any) {\n  React.useEffect(() => {\n    const query = getQuery();\n\n    function listener({ matches }: MediaQueryListEvent) {\n      const colorScheme = matches ? 'dark' : 'light';\n      SyntheticPlatformEmitter.emit('appearanceChanged', {\n        colorScheme,\n      });\n    }\n\n    if (query)\n      query.addListener(listener);\n\n    return () => {\n      if (query) {\n        query.removeListener(listener)\n      }\n    }\n  }, []);\n\n  return <View style={{ flex: 1 }} {...props} />\n};\n"]},"metadata":{},"sourceType":"script"}