{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _excluded = [\"placement\", \"children\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_native_1 = require(\"react-native\");\n\nvar input_component_1 = require(\"../input/input.component\");\n\nvar list_component_1 = require(\"../list/list.component\");\n\nvar popover_component_1 = require(\"../popover/popover.component\");\n\nvar Autocomplete = function (_react_1$default$Comp) {\n  _inherits(Autocomplete, _react_1$default$Comp);\n\n  var _super = _createSuper(Autocomplete);\n\n  function Autocomplete() {\n    var _this;\n\n    _classCallCheck(this, Autocomplete);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      listVisible: false\n    };\n    _this.popoverRef = react_1.default.createRef();\n    _this.inputRef = react_1.default.createRef();\n\n    _this.show = function () {\n      var _this$popoverRef$curr;\n\n      (_this$popoverRef$curr = _this.popoverRef.current) == null ? void 0 : _this$popoverRef$curr.show();\n    };\n\n    _this.hide = function () {\n      var _this$popoverRef$curr2;\n\n      (_this$popoverRef$curr2 = _this.popoverRef.current) == null ? void 0 : _this$popoverRef$curr2.hide();\n    };\n\n    _this.focus = function () {\n      var _this$inputRef$curren;\n\n      (_this$inputRef$curren = _this.inputRef.current) == null ? void 0 : _this$inputRef$curren.focus();\n    };\n\n    _this.blur = function () {\n      var _this$inputRef$curren2;\n\n      (_this$inputRef$curren2 = _this.inputRef.current) == null ? void 0 : _this$inputRef$curren2.blur();\n    };\n\n    _this.isFocused = function () {\n      var _this$inputRef$curren3;\n\n      return (_this$inputRef$curren3 = _this.inputRef.current) == null ? void 0 : _this$inputRef$curren3.isFocused();\n    };\n\n    _this.clear = function () {\n      var _this$inputRef$curren4;\n\n      (_this$inputRef$curren4 = _this.inputRef.current) == null ? void 0 : _this$inputRef$curren4.clear();\n    };\n\n    _this.onInputFocus = function (event) {\n      _this.setOptionsListVisible();\n\n      _this.props.onFocus && _this.props.onFocus(event);\n    };\n\n    _this.onInputSubmitEditing = function (e) {\n      _this.setOptionsListInvisible();\n\n      _this.props.onSubmitEditing && _this.props.onSubmitEditing(e);\n    };\n\n    _this.onBackdropPress = function () {\n      _this.blur();\n\n      _this.setOptionsListInvisible();\n    };\n\n    _this.onItemPress = function (index) {\n      if (_this.props.onSelect) {\n        _this.setOptionsListInvisible();\n\n        _this.props.onSelect(index);\n      }\n    };\n\n    _this.setOptionsListVisible = function () {\n      var hasData = _this.data.length > 0;\n      hasData && _this.setState({\n        listVisible: true\n      });\n    };\n\n    _this.setOptionsListInvisible = function () {\n      _this.setState({\n        listVisible: false\n      });\n    };\n\n    _this.renderItem = function (info) {\n      return react_1.default.cloneElement(info.item, {\n        onPress: function onPress() {\n          return _this.onItemPress(info.index);\n        }\n      });\n    };\n\n    _this.renderInputElement = function (props) {\n      return react_1.default.createElement(react_native_1.View, null, react_1.default.createElement(input_component_1.Input, _extends({}, props, {\n        ref: _this.inputRef,\n        onFocus: _this.onInputFocus,\n        onSubmitEditing: _this.onInputSubmitEditing\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(Autocomplete, [{\n    key: \"data\",\n    get: function get() {\n      return react_1.default.Children.toArray(this.props.children || []);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var isChildCountChanged = this.data.length !== react_1.default.Children.count(prevProps.children);\n      var shouldBecomeVisible = !this.state.listVisible && this.isFocused() && isChildCountChanged;\n      shouldBecomeVisible && this.setState({\n        listVisible: shouldBecomeVisible\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          placement = _this$props.placement,\n          children = _this$props.children,\n          inputProps = _objectWithoutProperties(_this$props, _excluded);\n\n      return react_1.default.createElement(popover_component_1.Popover, {\n        ref: this.popoverRef,\n        style: styles.popover,\n        placement: placement,\n        visible: this.state.listVisible,\n        fullWidth: true,\n        anchor: function anchor() {\n          return _this2.renderInputElement(inputProps);\n        },\n        onBackdropPress: this.onBackdropPress\n      }, react_1.default.createElement(list_component_1.List, {\n        style: styles.list,\n        data: this.data,\n        bounces: false,\n        renderItem: this.renderItem\n      }));\n    }\n  }]);\n\n  return Autocomplete;\n}(react_1.default.Component);\n\nexports.Autocomplete = Autocomplete;\nvar styles = react_native_1.StyleSheet.create({\n  popover: {\n    maxHeight: 192,\n    overflow: 'hidden'\n  },\n  list: {\n    flexGrow: 0,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["../../../../../src/components/ui/autocomplete/autocomplete.component.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst input_component_1 = require(\"../input/input.component\");\nconst list_component_1 = require(\"../list/list.component\");\nconst popover_component_1 = require(\"../popover/popover.component\");\n/**\n * Autocomplete is a normal text input enhanced by a panel of suggested options.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets data list visible.\n *\n * @method {() => void} hide - Sets data list invisible.\n *\n * @method {() => void} focus - Focuses an input field and sets data list visible.\n *\n * @method {() => void} blur - Removes focus from input field and sets data list invisible.\n *\n * @method {() => boolean} isFocused - Returns true if the input field is currently focused.\n *\n * @method {() => void} clear - Removes all text from the input field.\n *\n * @property {ReactElement<AutocompleteItemProps> | ReactElement<AutocompleteItemProps>[]} children -\n * Options displayed within list.\n *\n * @property {(number) => void} onSelect - Called when option is pressed.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Useful for giving user a hint on the input validity.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `small`, `medium` or `large`.\n * Defaults to *medium*.\n *\n * @property {ReactText | (TextProps) => ReactElement} label - String, number or a function component\n * to render to top of the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {string | PopoverPlacement} placement - Position of the options list relative to the input field.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {() => void} onFocus - Called when options list becomes visible.\n *\n * @property {() => void} onBlur - Called when options list becomes invisible.\n *\n * @property {InputProps} ...InputProps - Any props applied to Input component.\n *\n * @overview-example AutocompleteSimpleUsage\n * Autocomplete may contain options to be rendered within suggestions list.\n * Options should be provided by passing them to children.\n *\n * @overview-example AutocompleteAccessories\n * Autocomplete may contain accessories by passing `accessoryLeft` or `accessoryRight` props.\n * By default, we expect it to be images.\n *\n * @example AutocompleteHandleKeyboard\n * On mobile devices, options may be overlapped by keyboard.\n * It can be handled with `placement` property.\n *\n * @example AutocompleteAsync\n * For requesting a real-world data by typing, http requests may be sent with debounce.\n */\nclass Autocomplete extends react_1.default.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            listVisible: false,\n        };\n        this.popoverRef = react_1.default.createRef();\n        this.inputRef = react_1.default.createRef();\n        this.show = () => {\n            this.popoverRef.current?.show();\n        };\n        this.hide = () => {\n            this.popoverRef.current?.hide();\n        };\n        this.focus = () => {\n            this.inputRef.current?.focus();\n        };\n        this.blur = () => {\n            this.inputRef.current?.blur();\n        };\n        this.isFocused = () => {\n            return this.inputRef.current?.isFocused();\n        };\n        this.clear = () => {\n            this.inputRef.current?.clear();\n        };\n        this.onInputFocus = (event) => {\n            this.setOptionsListVisible();\n            this.props.onFocus && this.props.onFocus(event);\n        };\n        this.onInputSubmitEditing = (e) => {\n            this.setOptionsListInvisible();\n            this.props.onSubmitEditing && this.props.onSubmitEditing(e);\n        };\n        this.onBackdropPress = () => {\n            this.blur();\n            this.setOptionsListInvisible();\n        };\n        this.onItemPress = (index) => {\n            if (this.props.onSelect) {\n                this.setOptionsListInvisible();\n                this.props.onSelect(index);\n            }\n        };\n        this.setOptionsListVisible = () => {\n            const hasData = this.data.length > 0;\n            hasData && this.setState({ listVisible: true });\n        };\n        this.setOptionsListInvisible = () => {\n            this.setState({ listVisible: false });\n        };\n        this.renderItem = (info) => {\n            return react_1.default.cloneElement(info.item, { onPress: () => this.onItemPress(info.index) });\n        };\n        this.renderInputElement = (props) => {\n            return (react_1.default.createElement(react_native_1.View, null,\n                react_1.default.createElement(input_component_1.Input, Object.assign({}, props, { ref: this.inputRef, onFocus: this.onInputFocus, onSubmitEditing: this.onInputSubmitEditing }))));\n        };\n    }\n    get data() {\n        return react_1.default.Children.toArray(this.props.children || []);\n    }\n    componentDidUpdate(prevProps) {\n        const isChildCountChanged = this.data.length !== react_1.default.Children.count(prevProps.children);\n        const shouldBecomeVisible = !this.state.listVisible && this.isFocused() && isChildCountChanged;\n        shouldBecomeVisible && this.setState({ listVisible: shouldBecomeVisible });\n    }\n    render() {\n        const { placement, children, ...inputProps } = this.props;\n        return (react_1.default.createElement(popover_component_1.Popover, { ref: this.popoverRef, style: styles.popover, placement: placement, visible: this.state.listVisible, fullWidth: true, anchor: () => this.renderInputElement(inputProps), onBackdropPress: this.onBackdropPress },\n            react_1.default.createElement(list_component_1.List, { style: styles.list, data: this.data, bounces: false, renderItem: this.renderItem })));\n    }\n}\nexports.Autocomplete = Autocomplete;\nconst styles = react_native_1.StyleSheet.create({\n    popover: {\n        maxHeight: 192,\n        overflow: 'hidden',\n    },\n    list: {\n        flexGrow: 0,\n        overflow: 'hidden',\n    },\n});\n//# sourceMappingURL=autocomplete.component.js.map"]},"metadata":{},"sourceType":"script"}