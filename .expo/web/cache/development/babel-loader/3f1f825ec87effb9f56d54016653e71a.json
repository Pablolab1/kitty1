{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _GestureHandler2 = _interopRequireDefault(require(\"./GestureHandler\"));\n\nvar _utils = require(\"./utils\");\n\nvar _excluded = [\"maxPointers\", \"center\", \"deltaX\", \"deltaY\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DiscreteGestureHandler = function (_GestureHandler) {\n  (0, _inherits2.default)(DiscreteGestureHandler, _GestureHandler);\n\n  var _super = _createSuper(DiscreteGestureHandler);\n\n  function DiscreteGestureHandler() {\n    (0, _classCallCheck2.default)(this, DiscreteGestureHandler);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(DiscreteGestureHandler, [{\n    key: \"isDiscrete\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"shouldEnableGestureOnSetup\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"shouldFailUnderCustomCriteria\",\n    value: function shouldFailUnderCustomCriteria(_ref, _ref2) {\n      var x = _ref.x,\n          y = _ref.y,\n          deltaX = _ref.deltaX,\n          deltaY = _ref.deltaY;\n      var maxDeltaX = _ref2.maxDeltaX,\n          maxDeltaY = _ref2.maxDeltaY,\n          maxDistSq = _ref2.maxDistSq,\n          shouldCancelWhenOutside = _ref2.shouldCancelWhenOutside;\n\n      if (shouldCancelWhenOutside) {\n        if (!this.isPointInView({\n          x: x,\n          y: y\n        })) {\n          return true;\n        }\n      }\n\n      return (0, _utils.TEST_MAX_IF_NOT_NAN)(Math.abs(deltaX), maxDeltaX) || (0, _utils.TEST_MAX_IF_NOT_NAN)(Math.abs(deltaY), maxDeltaY) || (0, _utils.TEST_MAX_IF_NOT_NAN)(Math.abs(deltaY * deltaY + deltaX * deltaX), maxDistSq);\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref3) {\n      var _ref3$center = _ref3.center,\n          x = _ref3$center.x,\n          y = _ref3$center.y;\n      var rect = this.view.getBoundingClientRect();\n      return {\n        absoluteX: x,\n        absoluteY: y,\n        x: x - rect.left,\n        y: y - rect.top\n      };\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref4, recognizer, _ref5) {\n      var minPointers = _ref4.minPointers,\n          maxPointers = _ref4.maxPointers,\n          maxDist = _ref4.maxDist,\n          maxDeltaX = _ref4.maxDeltaX,\n          maxDeltaY = _ref4.maxDeltaY,\n          maxDistSq = _ref4.maxDistSq,\n          shouldCancelWhenOutside = _ref4.shouldCancelWhenOutside;\n      var pointerLength = _ref5.maxPointers,\n          center = _ref5.center,\n          deltaX = _ref5.deltaX,\n          deltaY = _ref5.deltaY,\n          props = (0, _objectWithoutProperties2.default)(_ref5, _excluded);\n      var validPointerCount = pointerLength >= minPointers && pointerLength <= maxPointers;\n\n      if (this.shouldFailUnderCustomCriteria(_objectSpread(_objectSpread({}, center), {}, {\n        deltaX: deltaX,\n        deltaY: deltaY\n      }), {\n        maxDeltaX: maxDeltaX,\n        maxDeltaY: maxDeltaY,\n        maxDistSq: maxDistSq,\n        shouldCancelWhenOutside: shouldCancelWhenOutside\n      }) || !validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n\n      return {\n        success: validPointerCount\n      };\n    }\n  }]);\n  return DiscreteGestureHandler;\n}(_GestureHandler2.default);\n\nvar _default = DiscreteGestureHandler;\nexports.default = _default;","map":{"version":3,"names":["DiscreteGestureHandler","x","y","deltaX","deltaY","maxDeltaX","maxDeltaY","maxDistSq","shouldCancelWhenOutside","isPointInView","TEST_MAX_IF_NOT_NAN","Math","abs","center","rect","view","getBoundingClientRect","absoluteX","absoluteY","left","top","recognizer","minPointers","maxPointers","maxDist","pointerLength","props","validPointerCount","shouldFailUnderCustomCriteria","isGestureRunning","failed","success","GestureHandler"],"sources":["C:/wks/reactnative/prueba/kitten2/node_modules/react-native-gesture-handler/web/DiscreteGestureHandler.js"],"sourcesContent":["import GestureHandler from './GestureHandler';\nimport { TEST_MAX_IF_NOT_NAN } from './utils';\n\nclass DiscreteGestureHandler extends GestureHandler {\n  get isDiscrete() {\n    return true;\n  }\n\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { x, y, deltaX, deltaY },\n    { maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside }\n  ) {\n    if (shouldCancelWhenOutside) {\n      if (!this.isPointInView({ x, y })) {\n        return true;\n      }\n    }\n    return (\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaX), maxDeltaX) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY), maxDeltaY) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY * deltaY + deltaX * deltaX), maxDistSq)\n    );\n  }\n\n  transformNativeEvent({ center: { x, y } }) {\n    const rect = this.view.getBoundingClientRect();\n\n    return {\n      absoluteX: x,\n      absoluteY: y,\n      x: x - rect.left,\n      y: y - rect.top,\n    };\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers, maxDist, maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside },\n    recognizer,\n    { maxPointers: pointerLength, center, deltaX, deltaY, ...props }\n  ) {\n    const validPointerCount = pointerLength >= minPointers && pointerLength <= maxPointers;\n\n    if (\n      this.shouldFailUnderCustomCriteria(\n        { ...center, deltaX, deltaY },\n        {\n          maxDeltaX,\n          maxDeltaY,\n          maxDistSq,\n          shouldCancelWhenOutside,\n        }\n      ) ||\n      // A user probably won't land a multi-pointer tap on the first tick (so we cannot just cancel each time)\n      // but if the gesture is running and the user adds or subtracts another pointer then it should fail.\n      (!validPointerCount && this.isGestureRunning)\n    ) {\n      return { failed: true };\n    }\n\n    return { success: validPointerCount };\n  }\n}\n\nexport default DiscreteGestureHandler;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;;;IAEMA,sB;;;;;;;;;;;;SACJ,eAAiB;MACf,OAAO,IAAP;IACD;;;SAED,eAAiC;MAC/B,OAAO,IAAP;IACD;;;WAED,oDAGE;MAAA,IAFEC,CAEF,QAFEA,CAEF;MAAA,IAFKC,CAEL,QAFKA,CAEL;MAAA,IAFQC,MAER,QAFQA,MAER;MAAA,IAFgBC,MAEhB,QAFgBA,MAEhB;MAAA,IADEC,SACF,SADEA,SACF;MAAA,IADaC,SACb,SADaA,SACb;MAAA,IADwBC,SACxB,SADwBA,SACxB;MAAA,IADmCC,uBACnC,SADmCA,uBACnC;;MACA,IAAIA,uBAAJ,EAA6B;QAC3B,IAAI,CAAC,KAAKC,aAAL,CAAmB;UAAER,CAAC,EAADA,CAAF;UAAKC,CAAC,EAADA;QAAL,CAAnB,CAAL,EAAmC;UACjC,OAAO,IAAP;QACD;MACF;;MACD,OACE,IAAAQ,0BAAA,EAAoBC,IAAI,CAACC,GAAL,CAAST,MAAT,CAApB,EAAsCE,SAAtC,KACA,IAAAK,0BAAA,EAAoBC,IAAI,CAACC,GAAL,CAASR,MAAT,CAApB,EAAsCE,SAAtC,CADA,IAEA,IAAAI,0BAAA,EAAoBC,IAAI,CAACC,GAAL,CAASR,MAAM,GAAGA,MAAT,GAAkBD,MAAM,GAAGA,MAApC,CAApB,EAAiEI,SAAjE,CAHF;IAKD;;;WAED,qCAA2C;MAAA,yBAApBM,MAAoB;MAAA,IAAVZ,CAAU,gBAAVA,CAAU;MAAA,IAAPC,CAAO,gBAAPA,CAAO;MACzC,IAAMY,IAAI,GAAG,KAAKC,IAAL,CAAUC,qBAAV,EAAb;MAEA,OAAO;QACLC,SAAS,EAAEhB,CADN;QAELiB,SAAS,EAAEhB,CAFN;QAGLD,CAAC,EAAEA,CAAC,GAAGa,IAAI,CAACK,IAHP;QAILjB,CAAC,EAAEA,CAAC,GAAGY,IAAI,CAACM;MAJP,CAAP;IAMD;;;WAED,yCAEEC,UAFF,SAIE;MAAA,IAHEC,WAGF,SAHEA,WAGF;MAAA,IAHeC,WAGf,SAHeA,WAGf;MAAA,IAH4BC,OAG5B,SAH4BA,OAG5B;MAAA,IAHqCnB,SAGrC,SAHqCA,SAGrC;MAAA,IAHgDC,SAGhD,SAHgDA,SAGhD;MAAA,IAH2DC,SAG3D,SAH2DA,SAG3D;MAAA,IAHsEC,uBAGtE,SAHsEA,uBAGtE;MAAA,IADeiB,aACf,SADEF,WACF;MAAA,IAD8BV,MAC9B,SAD8BA,MAC9B;MAAA,IADsCV,MACtC,SADsCA,MACtC;MAAA,IAD8CC,MAC9C,SAD8CA,MAC9C;MAAA,IADyDsB,KACzD;MACA,IAAMC,iBAAiB,GAAGF,aAAa,IAAIH,WAAjB,IAAgCG,aAAa,IAAIF,WAA3E;;MAEA,IACE,KAAKK,6BAAL,iCACOf,MADP;QACeV,MAAM,EAANA,MADf;QACuBC,MAAM,EAANA;MADvB,IAEE;QACEC,SAAS,EAATA,SADF;QAEEC,SAAS,EAATA,SAFF;QAGEC,SAAS,EAATA,SAHF;QAIEC,uBAAuB,EAAvBA;MAJF,CAFF,KAWC,CAACmB,iBAAD,IAAsB,KAAKE,gBAZ9B,EAaE;QACA,OAAO;UAAEC,MAAM,EAAE;QAAV,CAAP;MACD;;MAED,OAAO;QAAEC,OAAO,EAAEJ;MAAX,CAAP;IACD;;;EA7DkCK,wB;;eAgEtBhC,sB"},"metadata":{},"sourceType":"script"}