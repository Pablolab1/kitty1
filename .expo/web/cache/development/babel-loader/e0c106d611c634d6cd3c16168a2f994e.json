{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AutocompleteShowcase = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _components = require(\"@ui-kitten/components\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wks\\\\reactnative\\\\prueba\\\\kitten2\\\\src\\\\scenes\\\\components\\\\autocomplete\\\\autocomplete-showcase.component.tsx\";\n\nvar AutocompleteShowcase = function AutocompleteShowcase(props) {\n  var _React$useState = _react.default.useState(props.value),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState(props.data),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      data = _React$useState4[0],\n      setData = _React$useState4[1];\n\n  var onSelect = function onSelect(index) {\n    setValue(props.data[index].title);\n  };\n\n  var RenderComponent = props.renderItem;\n\n  var onChangeText = function onChangeText(query) {\n    var visibleData = props.data.filter(function (item) {\n      return item.title.toLowerCase().includes(query.toLowerCase());\n    });\n    setValue(query);\n    setData(visibleData);\n  };\n\n  var renderOption = function renderOption(item, index) {\n    return _react.default.createElement(_components.AutocompleteItem, {\n      key: index,\n      title: item.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    });\n  };\n\n  return _react.default.createElement(_components.Autocomplete, (0, _extends2.default)({}, props, {\n    style: styles.autocomplete,\n    value: value,\n    onChangeText: onChangeText,\n    onSelect: onSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), data.map(RenderComponent || renderOption));\n};\n\nexports.AutocompleteShowcase = AutocompleteShowcase;\n\nvar styles = _reactNative.StyleSheet.create({\n  autocomplete: {\n    minWidth: 192\n  }\n});","map":{"version":3,"names":["AutocompleteShowcase","props","React","useState","value","setValue","data","setData","onSelect","index","title","RenderComponent","renderItem","onChangeText","query","visibleData","filter","item","toLowerCase","includes","renderOption","styles","autocomplete","map","StyleSheet","create","minWidth"],"sources":["C:/wks/reactnative/prueba/kitten2/src/scenes/components/autocomplete/autocomplete-showcase.component.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Autocomplete,\n  AutocompleteElement,\n  AutocompleteItem,\n} from '@ui-kitten/components';\nimport { AutocompletePropsCustom } from './type';\n\nexport const AutocompleteShowcase = (\n  props: AutocompletePropsCustom\n): AutocompleteElement => {\n  const [value, setValue] = React.useState<string>(props.value);\n  const [data, setData] = React.useState(props.data);\n\n  const onSelect = (index: number): void => {\n    setValue(props.data[index].title);\n  };\n\n  const RenderComponent = props.renderItem;\n\n  const onChangeText = (query: string): void => {\n    const visibleData = props.data.filter((item) => {\n      return item.title.toLowerCase().includes(query.toLowerCase());\n    });\n\n    setValue(query);\n    setData(visibleData);\n  };\n\n  const renderOption = (item, index): React.ReactElement => (\n    <AutocompleteItem key={index} title={item.title} />\n  );\n\n  return (\n    <Autocomplete\n      {...props}\n      style={styles.autocomplete}\n      value={value}\n      onChangeText={onChangeText}\n      onSelect={onSelect}\n    >\n      {data.map(RenderComponent || renderOption)}\n    </Autocomplete>\n  );\n};\n\nconst styles = StyleSheet.create({\n  autocomplete: {\n    minWidth: 192,\n  },\n});\n"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;AAOO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,CAClCC,KADkC,EAEV;EACxB,sBAA0BC,cAAA,CAAMC,QAAN,CAAuBF,KAAK,CAACG,KAA7B,CAA1B;EAAA;EAAA,IAAOA,KAAP;EAAA,IAAcC,QAAd;;EACA,uBAAwBH,cAAA,CAAMC,QAAN,CAAeF,KAAK,CAACK,IAArB,CAAxB;EAAA;EAAA,IAAOA,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAyB;IACxCJ,QAAQ,CAACJ,KAAK,CAACK,IAAN,CAAWG,KAAX,EAAkBC,KAAnB,CAAR;EACD,CAFD;;EAIA,IAAMC,eAAe,GAAGV,KAAK,CAACW,UAA9B;;EAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAyB;IAC5C,IAAMC,WAAW,GAAGd,KAAK,CAACK,IAAN,CAAWU,MAAX,CAAkB,UAACC,IAAD,EAAU;MAC9C,OAAOA,IAAI,CAACP,KAAL,CAAWQ,WAAX,GAAyBC,QAAzB,CAAkCL,KAAK,CAACI,WAAN,EAAlC,CAAP;IACD,CAFmB,CAApB;IAIAb,QAAQ,CAACS,KAAD,CAAR;IACAP,OAAO,CAACQ,WAAD,CAAP;EACD,CAPD;;EASA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACH,IAAD,EAAOR,KAAP;IAAA,OACnB,6BAAC,4BAAD;MAAkB,GAAG,EAAEA,KAAvB;MAA8B,KAAK,EAAEQ,IAAI,CAACP,KAA1C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADmB;EAAA,CAArB;;EAIA,OACE,6BAAC,wBAAD,6BACMT,KADN;IAEE,KAAK,EAAEoB,MAAM,CAACC,YAFhB;IAGE,KAAK,EAAElB,KAHT;IAIE,YAAY,EAAES,YAJhB;IAKE,QAAQ,EAAEL,QALZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAOGF,IAAI,CAACiB,GAAL,CAASZ,eAAe,IAAIS,YAA5B,CAPH,CADF;AAWD,CApCM;;;;AAsCP,IAAMC,MAAM,GAAGG,uBAAA,CAAWC,MAAX,CAAkB;EAC/BH,YAAY,EAAE;IACZI,QAAQ,EAAE;EADE;AADiB,CAAlB,CAAf"},"metadata":{},"sourceType":"script"}