{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isLocationEnabledSync = exports.isLocationEnabled = exports.isCameraPresentSync = exports.isCameraPresent = exports.isBatteryChargingSync = exports.isBatteryCharging = exports.isAirplaneModeSync = exports.isAirplaneMode = exports.getUserAgentSync = exports.getUserAgent = exports.getUsedMemorySync = exports.getUsedMemory = exports.getTotalMemorySync = exports.getTotalMemory = exports.getTotalDiskCapacitySync = exports.getTotalDiskCapacity = exports.getPowerStateSync = exports.getPowerState = exports.getMaxMemorySync = exports.getMaxMemory = exports.getInstallReferrerSync = exports.getInstallReferrer = exports.getFreeDiskStorageSync = exports.getFreeDiskStorage = exports.getBatteryLevelSync = exports.getBatteryLevel = exports.getBaseOs = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar deviceInfoEmitter = new _reactNative.NativeEventEmitter(_reactNative.NativeModules.RNDeviceInfo);\nvar batteryCharging = false,\n    batteryLevel = -1,\n    powerState = {};\n\nvar _readPowerState = function _readPowerState(battery) {\n  var level = battery.level,\n      charging = battery.charging,\n      chargingtime = battery.chargingtime,\n      dischargingtime = battery.dischargingtime;\n  return {\n    batteryLevel: level,\n    lowPowerMode: false,\n    batteryState: level === 1 ? 'full' : charging ? 'charging' : 'unplugged',\n    chargingtime: chargingtime,\n    dischargingtime: dischargingtime\n  };\n};\n\nvar getMaxMemorySync = function getMaxMemorySync() {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.jsHeapSizeLimit;\n  }\n\n  return -1;\n};\n\nexports.getMaxMemorySync = getMaxMemorySync;\n\nvar getInstallReferrerSync = function getInstallReferrerSync() {\n  return document.referrer;\n};\n\nexports.getInstallReferrerSync = getInstallReferrerSync;\n\nvar isAirplaneModeSync = function isAirplaneModeSync() {\n  return !!navigator.onLine;\n};\n\nexports.isAirplaneModeSync = isAirplaneModeSync;\n\nvar getUserAgentSync = function getUserAgentSync() {\n  return window.navigator.userAgent;\n};\n\nexports.getUserAgentSync = getUserAgentSync;\n\nvar isLocationEnabledSync = function isLocationEnabledSync() {\n  return !!navigator.geolocation;\n};\n\nexports.isLocationEnabledSync = isLocationEnabledSync;\n\nvar getTotalMemorySync = function getTotalMemorySync() {\n  if (navigator.deviceMemory) {\n    return navigator.deviceMemory * 1000000000;\n  }\n\n  return -1;\n};\n\nexports.getTotalMemorySync = getTotalMemorySync;\n\nvar getUsedMemorySync = function getUsedMemorySync() {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.usedJSHeapSize;\n  }\n\n  return -1;\n};\n\nexports.getUsedMemorySync = getUsedMemorySync;\n\nvar init = function init() {\n  var battery;\n  return _regenerator.default.async(function init$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!navigator.getBattery) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 3;\n          return _regenerator.default.awrap(navigator.getBattery());\n\n        case 3:\n          battery = _context.sent;\n          batteryCharging = battery.charging;\n          battery.addEventListener('chargingchange', function () {\n            var charging = battery.charging;\n            batteryCharging = charging;\n            powerState = _readPowerState(battery);\n            deviceInfoEmitter.emit('RNDeviceInfo_powerStateDidChange', powerState);\n          });\n          battery.addEventListener('levelchange', function () {\n            var level = battery.level;\n            batteryLevel = level;\n            powerState = _readPowerState(battery);\n            deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelDidChange', level);\n\n            if (level < 0.2) {\n              deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelIsLow', level);\n            }\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar getBaseOsSync = function getBaseOsSync() {\n  var userAgent = window.navigator.userAgent,\n      platform = window.navigator.platform,\n      macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n      windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n      iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n  var os = platform;\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = 'Mac OS';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    os = 'iOS';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = 'Windows';\n  } else if (/Android/.test(userAgent)) {\n    os = 'Android';\n  } else if (!os && /Linux/.test(platform)) {\n    os = 'Linux';\n  }\n\n  return os;\n};\n\ninit();\n\nvar getInstallReferrer = function getInstallReferrer() {\n  return _regenerator.default.async(function getInstallReferrer$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", getInstallReferrerSync());\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getInstallReferrer = getInstallReferrer;\n\nvar getUserAgent = function getUserAgent() {\n  return _regenerator.default.async(function getUserAgent$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", getUserAgentSync());\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getUserAgent = getUserAgent;\n\nvar isBatteryCharging = function isBatteryCharging() {\n  var battery;\n  return _regenerator.default.async(function isBatteryCharging$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!navigator.getBattery) {\n            _context4.next = 5;\n            break;\n          }\n\n          _context4.next = 3;\n          return _regenerator.default.awrap(navigator.getBattery());\n\n        case 3:\n          battery = _context4.sent;\n          return _context4.abrupt(\"return\", battery.level);\n\n        case 5:\n          return _context4.abrupt(\"return\", false);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.isBatteryCharging = isBatteryCharging;\n\nvar isBatteryChargingSync = function isBatteryChargingSync() {\n  return batteryCharging;\n};\n\nexports.isBatteryChargingSync = isBatteryChargingSync;\n\nvar isCameraPresent = function isCameraPresent() {\n  var devices;\n  return _regenerator.default.async(function isCameraPresent$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!navigator.getBattery) {\n            _context5.next = 5;\n            break;\n          }\n\n          _context5.next = 3;\n          return _regenerator.default.awrap(navigator.mediaDevices.enumerateDevices());\n\n        case 3:\n          devices = _context5.sent;\n          return _context5.abrupt(\"return\", !!devices.find(function (d) {\n            return d.kind === 'videoinput';\n          }));\n\n        case 5:\n          return _context5.abrupt(\"return\", false);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.isCameraPresent = isCameraPresent;\n\nvar isCameraPresentSync = function isCameraPresentSync() {\n  console.log('[react-native-device-info] isCameraPresentSync not supported - please use isCameraPresent');\n  return false;\n};\n\nexports.isCameraPresentSync = isCameraPresentSync;\n\nvar getBatteryLevel = function getBatteryLevel() {\n  var battery;\n  return _regenerator.default.async(function getBatteryLevel$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (!navigator.getBattery) {\n            _context6.next = 5;\n            break;\n          }\n\n          _context6.next = 3;\n          return _regenerator.default.awrap(navigator.getBattery());\n\n        case 3:\n          battery = _context6.sent;\n          return _context6.abrupt(\"return\", battery.level);\n\n        case 5:\n          return _context6.abrupt(\"return\", -1);\n\n        case 6:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getBatteryLevel = getBatteryLevel;\n\nvar getBatteryLevelSync = function getBatteryLevelSync() {\n  return batteryLevel;\n};\n\nexports.getBatteryLevelSync = getBatteryLevelSync;\n\nvar isLocationEnabled = function isLocationEnabled() {\n  return _regenerator.default.async(function isLocationEnabled$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          return _context7.abrupt(\"return\", isLocationEnabledSync());\n\n        case 1:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.isLocationEnabled = isLocationEnabled;\n\nvar isAirplaneMode = function isAirplaneMode() {\n  return _regenerator.default.async(function isAirplaneMode$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          return _context8.abrupt(\"return\", isAirplaneModeSync());\n\n        case 1:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.isAirplaneMode = isAirplaneMode;\n\nvar getBaseOs = function getBaseOs() {\n  return _regenerator.default.async(function getBaseOs$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          return _context9.abrupt(\"return\", getBaseOsSync());\n\n        case 1:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getBaseOs = getBaseOs;\n\nvar getTotalDiskCapacity = function getTotalDiskCapacity() {\n  var _await$navigator$stor, quota;\n\n  return _regenerator.default.async(function getTotalDiskCapacity$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          if (!(navigator.storage && navigator.storage.estimate)) {\n            _context10.next = 6;\n            break;\n          }\n\n          _context10.next = 3;\n          return _regenerator.default.awrap(navigator.storage.estimate());\n\n        case 3:\n          _await$navigator$stor = _context10.sent;\n          quota = _await$navigator$stor.quota;\n          return _context10.abrupt(\"return\", quota);\n\n        case 6:\n          return _context10.abrupt(\"return\", -1);\n\n        case 7:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getTotalDiskCapacity = getTotalDiskCapacity;\n\nvar getTotalDiskCapacitySync = function getTotalDiskCapacitySync() {\n  console.log('[react-native-device-info] getTotalDiskCapacitySync not supported - please use getTotalDiskCapacity');\n  return -1;\n};\n\nexports.getTotalDiskCapacitySync = getTotalDiskCapacitySync;\n\nvar getFreeDiskStorage = function getFreeDiskStorage() {\n  var _await$navigator$stor2, quota, usage;\n\n  return _regenerator.default.async(function getFreeDiskStorage$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          if (!(navigator.storage && navigator.storage.estimate)) {\n            _context11.next = 7;\n            break;\n          }\n\n          _context11.next = 3;\n          return _regenerator.default.awrap(navigator.storage.estimate());\n\n        case 3:\n          _await$navigator$stor2 = _context11.sent;\n          quota = _await$navigator$stor2.quota;\n          usage = _await$navigator$stor2.usage;\n          return _context11.abrupt(\"return\", quota - usage);\n\n        case 7:\n          return _context11.abrupt(\"return\", -1);\n\n        case 8:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getFreeDiskStorage = getFreeDiskStorage;\n\nvar getFreeDiskStorageSync = function getFreeDiskStorageSync() {\n  console.log('[react-native-device-info] getFreeDiskStorageSync not supported - please use getFreeDiskStorage');\n  return -1;\n};\n\nexports.getFreeDiskStorageSync = getFreeDiskStorageSync;\n\nvar getMaxMemory = function getMaxMemory() {\n  return _regenerator.default.async(function getMaxMemory$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          return _context12.abrupt(\"return\", getMaxMemorySync());\n\n        case 1:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getMaxMemory = getMaxMemory;\n\nvar getUsedMemory = function getUsedMemory() {\n  return _regenerator.default.async(function getUsedMemory$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          return _context13.abrupt(\"return\", getUsedMemorySync());\n\n        case 1:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getUsedMemory = getUsedMemory;\n\nvar getTotalMemory = function getTotalMemory() {\n  return _regenerator.default.async(function getTotalMemory$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          return _context14.abrupt(\"return\", getTotalMemorySync());\n\n        case 1:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getTotalMemory = getTotalMemory;\n\nvar getPowerState = function getPowerState() {\n  var battery;\n  return _regenerator.default.async(function getPowerState$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          if (!navigator.getBattery) {\n            _context15.next = 5;\n            break;\n          }\n\n          _context15.next = 3;\n          return _regenerator.default.awrap(navigator.getBattery());\n\n        case 3:\n          battery = _context15.sent;\n          return _context15.abrupt(\"return\", _readPowerState(battery));\n\n        case 5:\n          return _context15.abrupt(\"return\", {});\n\n        case 6:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getPowerState = getPowerState;\n\nvar getPowerStateSync = function getPowerStateSync() {\n  return powerState;\n};\n\nexports.getPowerStateSync = getPowerStateSync;","map":{"version":3,"sources":["index.js"],"names":["deviceInfoEmitter","NativeModules","batteryCharging","batteryLevel","powerState","_readPowerState","battery","dischargingtime","lowPowerMode","batteryState","level","charging","chargingtime","getMaxMemorySync","window","getInstallReferrerSync","document","isAirplaneModeSync","navigator","getUserAgentSync","isLocationEnabledSync","getTotalMemorySync","getUsedMemorySync","init","getBaseOsSync","userAgent","platform","macosPlatforms","windowsPlatforms","iosPlatforms","os","getInstallReferrer","getUserAgent","isBatteryCharging","isBatteryChargingSync","isCameraPresent","devices","d","isCameraPresentSync","console","getBatteryLevel","getBatteryLevelSync","isLocationEnabled","isAirplaneMode","getBaseOs","getTotalDiskCapacity","quota","getTotalDiskCapacitySync","getFreeDiskStorage","usage","getFreeDiskStorageSync","getMaxMemory","getUsedMemory","getTotalMemory","getPowerState","getPowerStateSync"],"mappings":"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","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\n\nlet batteryCharging = false,\n  batteryLevel = -1,\n  powerState = {};\n\nconst _readPowerState = (battery) => {\n  const { level, charging, chargingtime, dischargingtime } = battery;\n\n  return {\n    batteryLevel: level,\n    lowPowerMode: false,\n    batteryState: level === 1 ? 'full' : charging ? 'charging' : 'unplugged',\n    chargingtime,\n    dischargingtime,\n  };\n};\n\nexport const getMaxMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.jsHeapSizeLimit;\n  }\n  return -1;\n};\n\nexport const getInstallReferrerSync = () => {\n  return document.referrer;\n};\n\nexport const isAirplaneModeSync = () => {\n  return !!navigator.onLine;\n};\n\nexport const getUserAgentSync = () => {\n  return window.navigator.userAgent;\n};\n\nexport const isLocationEnabledSync = () => {\n  return !!navigator.geolocation;\n};\n\nexport const getTotalMemorySync = () => {\n  if (navigator.deviceMemory) {\n    return navigator.deviceMemory * 1000000000;\n  }\n  return -1;\n};\n\nexport const getUsedMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.usedJSHeapSize;\n  }\n  return -1;\n};\n\nconst init = async () => {\n  if (navigator.getBattery) {\n    const battery = await navigator.getBattery();\n\n    batteryCharging = battery.charging;\n\n    battery.addEventListener('chargingchange', () => {\n      const { charging } = battery;\n\n      batteryCharging = charging;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_powerStateDidChange', powerState);\n    });\n\n    battery.addEventListener('levelchange', () => {\n      const { level } = battery;\n\n      batteryLevel = level;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelDidChange', level);\n      if (level < 0.2) {\n        deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelIsLow', level);\n      }\n    });\n  }\n};\n\nconst getBaseOsSync = () => {\n  const userAgent = window.navigator.userAgent,\n    platform = window.navigator.platform,\n    macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n    windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n    iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n\n  let os = platform;\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = 'Mac OS';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    os = 'iOS';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = 'Windows';\n  } else if (/Android/.test(userAgent)) {\n    os = 'Android';\n  } else if (!os && /Linux/.test(platform)) {\n    os = 'Linux';\n  }\n\n  return os;\n};\n\ninit();\n/**\n * react-native-web empty polyfill.\n */\n\nexport const getInstallReferrer = async () => {\n  return getInstallReferrerSync();\n};\n\nexport const getUserAgent = async () => {\n  return getUserAgentSync();\n};\n\nexport const isBatteryCharging = async () => {\n  if (navigator.getBattery) {\n    const battery = await navigator.getBattery();\n    return battery.level;\n  }\n  return false;\n};\n\nexport const isBatteryChargingSync = () => {\n  return batteryCharging;\n};\n\nexport const isCameraPresent = async () => {\n  if (navigator.getBattery) {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    return !!devices.find((d) => d.kind === 'videoinput');\n  }\n  return false;\n};\n\nexport const isCameraPresentSync = () => {\n  console.log(\n    '[react-native-device-info] isCameraPresentSync not supported - please use isCameraPresent'\n  );\n  return false;\n};\n\nexport const getBatteryLevel = async () => {\n  if (navigator.getBattery) {\n    const battery = await navigator.getBattery();\n    return battery.level;\n  }\n  return -1;\n};\n\nexport const getBatteryLevelSync = () => {\n  return batteryLevel;\n};\n\nexport const isLocationEnabled = async () => {\n  return isLocationEnabledSync();\n};\n\nexport const isAirplaneMode = async () => {\n  return isAirplaneModeSync();\n};\n\nexport const getBaseOs = async () => {\n  return getBaseOsSync();\n};\n\nexport const getTotalDiskCapacity = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    const { quota } = await navigator.storage.estimate();\n    return quota;\n  }\n  return -1;\n};\n\nexport const getTotalDiskCapacitySync = () => {\n  console.log(\n    '[react-native-device-info] getTotalDiskCapacitySync not supported - please use getTotalDiskCapacity'\n  );\n  return -1;\n};\n\nexport const getFreeDiskStorage = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    const { quota, usage } = await navigator.storage.estimate();\n    return quota - usage;\n  }\n  return -1;\n};\n\nexport const getFreeDiskStorageSync = () => {\n  console.log(\n    '[react-native-device-info] getFreeDiskStorageSync not supported - please use getFreeDiskStorage'\n  );\n  return -1;\n};\n\nexport const getMaxMemory = async () => {\n  return getMaxMemorySync();\n};\n\nexport const getUsedMemory = async () => {\n  return getUsedMemorySync();\n};\n\nexport const getTotalMemory = async () => {\n  return getTotalMemorySync();\n};\n\nexport const getPowerState = async () => {\n  if (navigator.getBattery) {\n    const battery = await navigator.getBattery();\n\n    return _readPowerState(battery);\n  }\n  return {};\n};\n\nexport const getPowerStateSync = () => {\n  return powerState;\n};\n"]},"metadata":{},"sourceType":"script"}