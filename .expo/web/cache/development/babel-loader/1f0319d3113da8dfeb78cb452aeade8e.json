{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebBrowserService = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSafariView = _interopRequireDefault(require(\"react-native-safari-view\"));\n\nvar WebBrowserService = (0, _createClass2.default)(function WebBrowserService() {\n  (0, _classCallCheck2.default)(this, WebBrowserService);\n});\nexports.WebBrowserService = WebBrowserService;\n\nWebBrowserService.openBrowserAsync = function (url) {\n  if (_reactNative.Platform.OS === 'ios') {\n    return WebBrowserService.openInAppUrl(url).catch(function () {\n      return WebBrowserService.openUrl(url);\n    });\n  } else {\n    return WebBrowserService.openUrl(url);\n  }\n};\n\nWebBrowserService.openInAppUrl = function (url) {\n  return _reactNativeSafariView.default.isAvailable().then(function () {\n    return _reactNativeSafariView.default.show({\n      url: url\n    });\n  });\n};\n\nWebBrowserService.openUrl = function (url) {\n  return _reactNative.Linking.openURL(url);\n};","map":{"version":3,"names":["WebBrowserService","openBrowserAsync","url","Platform","OS","openInAppUrl","catch","openUrl","SafariView","isAvailable","then","show","Linking","openURL"],"sources":["C:/wks/reactnative/prueba/kitten2/src/services/web-browser.service.rn.ts"],"sourcesContent":["import { Linking, Platform } from 'react-native';\nimport SafariView from 'react-native-safari-view';\n\nexport class WebBrowserService {\n\n  static openBrowserAsync = (url: string): Promise<any> => {\n    if (Platform.OS === 'ios') {\n      return WebBrowserService.openInAppUrl(url).catch(() => WebBrowserService.openUrl(url));\n    } else {\n      return WebBrowserService.openUrl(url);\n    }\n  };\n\n  private static openInAppUrl = (url: string): Promise<any> => {\n    return SafariView.isAvailable()\n                     .then(() => SafariView.show({ url }));\n  };\n\n  private static openUrl = (url: string): Promise<any> => {\n    return Linking.openURL(url);\n  };\n}\n"],"mappings":";;;;;;;;;;;AAAA;;AACA;;IAEaA,iB;;;;;AAAAA,iB,CAEJC,gB,GAAmB,UAACC,GAAD,EAA+B;EACvD,IAAIC,qBAAA,CAASC,EAAT,KAAgB,KAApB,EAA2B;IACzB,OAAOJ,iBAAiB,CAACK,YAAlB,CAA+BH,GAA/B,EAAoCI,KAApC,CAA0C;MAAA,OAAMN,iBAAiB,CAACO,OAAlB,CAA0BL,GAA1B,CAAN;IAAA,CAA1C,CAAP;EACD,CAFD,MAEO;IACL,OAAOF,iBAAiB,CAACO,OAAlB,CAA0BL,GAA1B,CAAP;EACD;AACF,C;;AARUF,iB,CAUIK,Y,GAAe,UAACH,GAAD,EAA+B;EAC3D,OAAOM,8BAAA,CAAWC,WAAX,GACWC,IADX,CACgB;IAAA,OAAMF,8BAAA,CAAWG,IAAX,CAAgB;MAAET,GAAG,EAAHA;IAAF,CAAhB,CAAN;EAAA,CADhB,CAAP;AAED,C;;AAbUF,iB,CAeIO,O,GAAU,UAACL,GAAD,EAA+B;EACtD,OAAOU,oBAAA,CAAQC,OAAR,CAAgBX,GAAhB,CAAP;AACD,C"},"metadata":{},"sourceType":"script"}