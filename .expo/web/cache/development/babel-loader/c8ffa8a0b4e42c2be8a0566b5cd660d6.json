{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIsKeyboardShown;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction useIsKeyboardShown() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isKeyboardShown = _React$useState2[0],\n      setIsKeyboardShown = _React$useState2[1];\n\n  React.useEffect(function () {\n    var handleKeyboardShow = function handleKeyboardShow() {\n      return setIsKeyboardShown(true);\n    };\n\n    var handleKeyboardHide = function handleKeyboardHide() {\n      return setIsKeyboardShown(false);\n    };\n\n    if (_reactNative.Platform.OS === 'ios') {\n      _reactNative.Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n\n      _reactNative.Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      _reactNative.Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n\n      _reactNative.Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return function () {\n      if (_reactNative.Platform.OS === 'ios') {\n        _reactNative.Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n\n        _reactNative.Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        _reactNative.Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n\n        _reactNative.Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n  return isKeyboardShown;\n}","map":{"version":3,"sources":["useIsKeyboardShown.tsx"],"names":["React","handleKeyboardShow","setIsKeyboardShown","handleKeyboardHide","Platform","Keyboard"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;AAEe,SAAA,kBAAA,GAA8B;EAC3C,sBAA8CA,KAAK,CAALA,QAAAA,CAA9C,KAA8CA,CAA9C;EAAA;EAAA,IAAM,eAAN;EAAA,IAAM,kBAAN;;EAEAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;IACpB,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;MAAA,OAAMC,kBAAkB,CAAnD,IAAmD,CAAxB;IAAA,CAA3B;;IACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;MAAA,OAAMD,kBAAkB,CAAnD,KAAmD,CAAxB;IAAA,CAA3B;;IAEA,IAAIE,qBAAAA,CAAAA,EAAAA,KAAJ,KAAA,EAA2B;MACzBC,qBAAAA,CAAAA,WAAAA,CAAAA,kBAAAA,EAAAA,kBAAAA;;MACAA,qBAAAA,CAAAA,WAAAA,CAAAA,kBAAAA,EAAAA,kBAAAA;IAFF,CAAA,MAGO;MACLA,qBAAAA,CAAAA,WAAAA,CAAAA,iBAAAA,EAAAA,kBAAAA;;MACAA,qBAAAA,CAAAA,WAAAA,CAAAA,iBAAAA,EAAAA,kBAAAA;IACD;;IAED,OAAO,YAAM;MACX,IAAID,qBAAAA,CAAAA,EAAAA,KAAJ,KAAA,EAA2B;QACzBC,qBAAAA,CAAAA,cAAAA,CAAAA,kBAAAA,EAAAA,kBAAAA;;QACAA,qBAAAA,CAAAA,cAAAA,CAAAA,kBAAAA,EAAAA,kBAAAA;MAFF,CAAA,MAGO;QACLA,qBAAAA,CAAAA,cAAAA,CAAAA,iBAAAA,EAAAA,kBAAAA;;QACAA,qBAAAA,CAAAA,cAAAA,CAAAA,iBAAAA,EAAAA,kBAAAA;MACD;IAPH,CAAA;EAZFL,CAAAA,EAAAA,EAAAA;EAuBA,OAAA,eAAA;AACD","sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"]},"metadata":{},"sourceType":"script"}