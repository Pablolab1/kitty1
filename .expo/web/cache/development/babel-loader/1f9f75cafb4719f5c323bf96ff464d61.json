{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar fecha_1 = __importDefault(require(\"fecha\"));\n\nvar date_service_1 = require(\"./date.service\");\n\nvar type_1 = require(\"../i18n/type\");\n\nvar en_1 = require(\"../i18n/en\");\n\nexports.LOCALE_DEFAULT = 'en';\nvar DEFAULT_OPTIONS = {\n  format: 'DD/MM/YYYY',\n  startDayOfWeek: 0\n};\n\nvar NativeDateService = function (_date_service_1$DateS) {\n  _inherits(NativeDateService, _date_service_1$DateS);\n\n  var _super = _createSuper(NativeDateService);\n\n  function NativeDateService() {\n    var _thisSuper, _this;\n\n    var locale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exports.LOCALE_DEFAULT;\n    var options = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, NativeDateService);\n\n    _this = _super.call(this);\n    _this.i18nSettings = fecha_1.default.i18n;\n    _this.options = _extends({}, DEFAULT_OPTIONS, options);\n\n    _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(NativeDateService.prototype)), \"setLocale\", _thisSuper).call(_thisSuper, _this.options.i18n ? locale : exports.LOCALE_DEFAULT);\n\n    _this.setFechaLocaleData(_this.options.i18n || en_1.EN);\n\n    return _this;\n  }\n\n  _createClass(NativeDateService, [{\n    key: \"setLocale\",\n    value: function setLocale(locale) {\n      console.warn('Runtime locale is not supported');\n    }\n  }, {\n    key: \"isValidDateString\",\n    value: function isValidDateString(date, format) {\n      return !isNaN(this.parse(date, format).getTime());\n    }\n  }, {\n    key: \"today\",\n    value: function today() {\n      return new Date();\n    }\n  }, {\n    key: \"getDate\",\n    value: function getDate(date) {\n      return date.getDate();\n    }\n  }, {\n    key: \"getMonth\",\n    value: function getMonth(date) {\n      return date.getMonth();\n    }\n  }, {\n    key: \"getYear\",\n    value: function getYear(date) {\n      return date.getFullYear();\n    }\n  }, {\n    key: \"getDayOfWeek\",\n    value: function getDayOfWeek(date) {\n      return date.getDay();\n    }\n  }, {\n    key: \"getFirstDayOfWeek\",\n    value: function getFirstDayOfWeek() {\n      return this.options.startDayOfWeek;\n    }\n  }, {\n    key: \"getMonthName\",\n    value: function getMonthName(date) {\n      var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : type_1.TranslationWidth.SHORT;\n      var index = date.getMonth();\n      return this.getMonthNameByIndex(index, style);\n    }\n  }, {\n    key: \"getMonthNameByIndex\",\n    value: function getMonthNameByIndex(index) {\n      var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : type_1.TranslationWidth.SHORT;\n      return this.getFechaMonthNames(style)[index];\n    }\n  }, {\n    key: \"getDayOfWeekNames\",\n    value: function getDayOfWeekNames() {\n      var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : type_1.TranslationWidth.SHORT;\n      var dayNames = this.getFechaDayNames(style);\n      return this.shiftDayOfWeekNames(_toConsumableArray(dayNames), this.options.startDayOfWeek);\n    }\n  }, {\n    key: \"format\",\n    value: function format(date, _format) {\n      return fecha_1.default.format(date, _format || this.options.format, this.i18nSettings);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(date, format) {\n      return new Date(Date.parse(date));\n    }\n  }, {\n    key: \"addDay\",\n    value: function addDay(date, num) {\n      return this.createDate(date.getFullYear(), date.getMonth(), date.getDate() + num);\n    }\n  }, {\n    key: \"addMonth\",\n    value: function addMonth(date, num) {\n      var month = this.createDate(date.getFullYear(), date.getMonth() + num, 1);\n      month.setDate(Math.min(date.getDate(), this.getMonthEnd(month).getDate()));\n      return month;\n    }\n  }, {\n    key: \"addYear\",\n    value: function addYear(date, num) {\n      return this.createDate(date.getFullYear() + num, date.getMonth(), date.getDate());\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(date) {\n      return new Date(date.getTime());\n    }\n  }, {\n    key: \"compareDates\",\n    value: function compareDates(date1, date2) {\n      return date1.getTime() - date2.getTime();\n    }\n  }, {\n    key: \"compareDatesSafe\",\n    value: function compareDatesSafe(date1, date2) {\n      if (this.compareDates(date1, date2) < 0) {\n        return -1;\n      } else if (this.compareDates(date1, date2) > 0) {\n        return 1;\n      } else if (this.compareDates(date1, date2) === 0) {\n        return 0;\n      }\n    }\n  }, {\n    key: \"createDate\",\n    value: function createDate(year, month, date) {\n      var result = new Date(year, month, date);\n\n      if (year >= 0 && year < 100) {\n        result.setFullYear(result.getFullYear() - 1900);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getMonthEnd\",\n    value: function getMonthEnd(date) {\n      return this.createDate(date.getFullYear(), date.getMonth() + 1, 0);\n    }\n  }, {\n    key: \"getMonthStart\",\n    value: function getMonthStart(date) {\n      return this.createDate(date.getFullYear(), date.getMonth(), 1);\n    }\n  }, {\n    key: \"getNumberOfDaysInMonth\",\n    value: function getNumberOfDaysInMonth(date) {\n      return this.getMonthEnd(date).getDate();\n    }\n  }, {\n    key: \"getYearEnd\",\n    value: function getYearEnd(date) {\n      return this.createDate(date.getFullYear(), 11, 31);\n    }\n  }, {\n    key: \"getYearStart\",\n    value: function getYearStart(date) {\n      return this.createDate(date.getFullYear(), 0, 1);\n    }\n  }, {\n    key: \"isSameDay\",\n    value: function isSameDay(date1, date2) {\n      return this.isSameMonth(date1, date2) && date1.getDate() === date2.getDate();\n    }\n  }, {\n    key: \"isSameMonth\",\n    value: function isSameMonth(date1, date2) {\n      return this.isSameYear(date1, date2) && date1.getMonth() === date2.getMonth();\n    }\n  }, {\n    key: \"isSameYear\",\n    value: function isSameYear(date1, date2) {\n      return date1.getFullYear() === date2.getFullYear();\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return 'native';\n    }\n  }, {\n    key: \"shiftDayOfWeekNames\",\n    value: function shiftDayOfWeekNames(value, offset) {\n      return value.splice(offset).concat(value);\n    }\n  }, {\n    key: \"getFechaDayNames\",\n    value: function getFechaDayNames(style) {\n      switch (style) {\n        case type_1.TranslationWidth.SHORT:\n          return this.i18nSettings.dayNamesShort;\n\n        case type_1.TranslationWidth.LONG:\n          return this.i18nSettings.dayNames;\n      }\n    }\n  }, {\n    key: \"getFechaMonthNames\",\n    value: function getFechaMonthNames(style) {\n      switch (style) {\n        case type_1.TranslationWidth.SHORT:\n          return this.i18nSettings.monthNamesShort;\n\n        case type_1.TranslationWidth.LONG:\n          return this.i18nSettings.monthNames;\n      }\n    }\n  }, {\n    key: \"setFechaLocaleData\",\n    value: function setFechaLocaleData(config) {\n      this.i18nSettings = _extends({}, fecha_1.default.i18n, {\n        dayNames: config.dayNames[type_1.TranslationWidth.LONG],\n        dayNamesShort: config.dayNames[type_1.TranslationWidth.SHORT],\n        monthNames: config.monthNames[type_1.TranslationWidth.LONG],\n        monthNamesShort: config.monthNames[type_1.TranslationWidth.SHORT]\n      });\n    }\n  }]);\n\n  return NativeDateService;\n}(date_service_1.DateService);\n\nexports.NativeDateService = NativeDateService;","map":{"version":3,"sources":["../../../../../../src/components/ui/calendar/service/nativeDate.service.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fecha_1 = __importDefault(require(\"fecha\"));\nconst date_service_1 = require(\"./date.service\");\nconst type_1 = require(\"../i18n/type\");\nconst en_1 = require(\"../i18n/en\");\nexports.LOCALE_DEFAULT = 'en';\nconst DEFAULT_OPTIONS = {\n    format: 'DD/MM/YYYY',\n    startDayOfWeek: 0,\n};\n/**\n * The `NativeDateService` is basic implementation of `DateService` using\n * native js date objects.\n */\nclass NativeDateService extends date_service_1.DateService {\n    constructor(locale = exports.LOCALE_DEFAULT, options) {\n        super();\n        this.i18nSettings = fecha_1.default.i18n;\n        this.options = { ...DEFAULT_OPTIONS, ...options };\n        super.setLocale(this.options.i18n ? locale : exports.LOCALE_DEFAULT);\n        this.setFechaLocaleData(this.options.i18n || en_1.EN);\n    }\n    setLocale(locale) {\n        console.warn('Runtime locale is not supported');\n    }\n    isValidDateString(date, format) {\n        return !isNaN(this.parse(date, format).getTime());\n    }\n    today() {\n        return new Date();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * returns first day of the week, it can be 1 if week starts from monday\n     * and 0 if from sunday and so on.\n     * */\n    getFirstDayOfWeek() {\n        return this.options.startDayOfWeek;\n    }\n    getMonthName(date, style = type_1.TranslationWidth.SHORT) {\n        const index = date.getMonth();\n        return this.getMonthNameByIndex(index, style);\n    }\n    getMonthNameByIndex(index, style = type_1.TranslationWidth.SHORT) {\n        return this.getFechaMonthNames(style)[index];\n    }\n    getDayOfWeekNames(style = type_1.TranslationWidth.SHORT) {\n        const dayNames = this.getFechaDayNames(style);\n        // avoid mutation of source array\n        return this.shiftDayOfWeekNames([...dayNames], this.options.startDayOfWeek);\n    }\n    format(date, format) {\n        return fecha_1.default.format(date, format || this.options.format, this.i18nSettings);\n    }\n    /**\n     * We haven't got capability to parse date using formatting without third party libraries.\n     * */\n    parse(date, format) {\n        return new Date(Date.parse(date));\n    }\n    addDay(date, num) {\n        return this.createDate(date.getFullYear(), date.getMonth(), date.getDate() + num);\n    }\n    addMonth(date, num) {\n        const month = this.createDate(date.getFullYear(), date.getMonth() + num, 1);\n        // In case of date has more days than calculated month js Date will change that month to the next one\n        // because of the date overflow.\n        month.setDate(Math.min(date.getDate(), this.getMonthEnd(month).getDate()));\n        return month;\n    }\n    addYear(date, num) {\n        return this.createDate(date.getFullYear() + num, date.getMonth(), date.getDate());\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    compareDates(date1, date2) {\n        return date1.getTime() - date2.getTime();\n    }\n    compareDatesSafe(date1, date2) {\n        if (this.compareDates(date1, date2) < 0) {\n            return -1;\n        }\n        else if (this.compareDates(date1, date2) > 0) {\n            return 1;\n        }\n        else if (this.compareDates(date1, date2) === 0) {\n            return 0;\n        }\n    }\n    createDate(year, month, date) {\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(result.getFullYear() - 1900);\n        }\n        return result;\n    }\n    getMonthEnd(date) {\n        return this.createDate(date.getFullYear(), date.getMonth() + 1, 0);\n    }\n    getMonthStart(date) {\n        return this.createDate(date.getFullYear(), date.getMonth(), 1);\n    }\n    getNumberOfDaysInMonth(date) {\n        return this.getMonthEnd(date).getDate();\n    }\n    getYearEnd(date) {\n        return this.createDate(date.getFullYear(), 11, 31);\n    }\n    getYearStart(date) {\n        return this.createDate(date.getFullYear(), 0, 1);\n    }\n    isSameDay(date1, date2) {\n        return this.isSameMonth(date1, date2) && date1.getDate() === date2.getDate();\n    }\n    isSameMonth(date1, date2) {\n        return this.isSameYear(date1, date2) && date1.getMonth() === date2.getMonth();\n    }\n    isSameYear(date1, date2) {\n        return date1.getFullYear() === date2.getFullYear();\n    }\n    getId() {\n        return 'native';\n    }\n    shiftDayOfWeekNames(value, offset) {\n        return value.splice(offset).concat(value);\n    }\n    getFechaDayNames(style) {\n        switch (style) {\n            case type_1.TranslationWidth.SHORT:\n                return this.i18nSettings.dayNamesShort;\n            case type_1.TranslationWidth.LONG:\n                return this.i18nSettings.dayNames;\n        }\n    }\n    getFechaMonthNames(style) {\n        switch (style) {\n            case type_1.TranslationWidth.SHORT:\n                return this.i18nSettings.monthNamesShort;\n            case type_1.TranslationWidth.LONG:\n                return this.i18nSettings.monthNames;\n        }\n    }\n    setFechaLocaleData(config) {\n        this.i18nSettings = {\n            ...fecha_1.default.i18n,\n            dayNames: config.dayNames[type_1.TranslationWidth.LONG],\n            dayNamesShort: config.dayNames[type_1.TranslationWidth.SHORT],\n            monthNames: config.monthNames[type_1.TranslationWidth.LONG],\n            monthNamesShort: config.monthNames[type_1.TranslationWidth.SHORT],\n        };\n    }\n}\nexports.NativeDateService = NativeDateService;\n//# sourceMappingURL=nativeDate.service.js.map"]},"metadata":{},"sourceType":"script"}