{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _GestureHandler = require(\"./GestureHandler\");\n\nvar _jsxFileName = \"C:\\\\wks\\\\reactnative\\\\prueba\\\\kitten2\\\\node_modules\\\\react-native-gesture-handler\\\\Swipeable.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DRAG_TOSS = 0.05;\n\nvar Swipeable = function (_Component) {\n  (0, _inherits2.default)(Swipeable, _Component);\n\n  var _super = _createSuper(Swipeable);\n\n  function Swipeable(_props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Swipeable);\n    _this = _super.call(this, _props);\n\n    _this._updateAnimatedEvent = function (props, state) {\n      var friction = props.friction,\n          overshootFriction = props.overshootFriction,\n          useNativeAnimations = props.useNativeAnimations;\n      var dragX = state.dragX,\n          rowTranslation = state.rowTranslation,\n          _state$leftWidth = state.leftWidth,\n          leftWidth = _state$leftWidth === void 0 ? 0 : _state$leftWidth,\n          _state$rowWidth = state.rowWidth,\n          rowWidth = _state$rowWidth === void 0 ? 0 : _state$rowWidth;\n      var _state$rightOffset = state.rightOffset,\n          rightOffset = _state$rightOffset === void 0 ? rowWidth : _state$rightOffset;\n      var rightWidth = Math.max(0, rowWidth - rightOffset);\n      var _props$overshootLeft = props.overshootLeft,\n          overshootLeft = _props$overshootLeft === void 0 ? leftWidth > 0 : _props$overshootLeft,\n          _props$overshootRight = props.overshootRight,\n          overshootRight = _props$overshootRight === void 0 ? rightWidth > 0 : _props$overshootRight;\n\n      var transX = _reactNative.Animated.add(rowTranslation, dragX.interpolate({\n        inputRange: [0, friction],\n        outputRange: [0, 1]\n      })).interpolate({\n        inputRange: [-rightWidth - (overshootRight ? 1 : overshootFriction), -rightWidth, leftWidth, leftWidth + (overshootLeft ? 1 : overshootFriction)],\n        outputRange: [-rightWidth - (overshootRight || overshootFriction > 1 ? 1 : 0), -rightWidth, leftWidth, leftWidth + (overshootLeft || overshootFriction > 1 ? 1 : 0)]\n      });\n\n      _this._transX = transX;\n      _this._showLeftAction = leftWidth > 0 ? transX.interpolate({\n        inputRange: [-1, 0, leftWidth],\n        outputRange: [0, 0, 1]\n      }) : new _reactNative.Animated.Value(0);\n      _this._leftActionTranslate = _this._showLeftAction.interpolate({\n        inputRange: [0, Number.MIN_VALUE],\n        outputRange: [-10000, 0],\n        extrapolate: 'clamp'\n      });\n      _this._showRightAction = rightWidth > 0 ? transX.interpolate({\n        inputRange: [-rightWidth, 0, 1],\n        outputRange: [1, 0, 0]\n      }) : new _reactNative.Animated.Value(0);\n      _this._rightActionTranslate = _this._showRightAction.interpolate({\n        inputRange: [0, Number.MIN_VALUE],\n        outputRange: [-10000, 0],\n        extrapolate: 'clamp'\n      });\n    };\n\n    _this._onTapHandlerStateChange = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n\n      if (nativeEvent.oldState === _GestureHandler.State.ACTIVE) {\n        _this.close();\n      }\n    };\n\n    _this._onHandlerStateChange = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n\n      if (nativeEvent.oldState === _GestureHandler.State.ACTIVE) {\n        _this._handleRelease(nativeEvent);\n      }\n    };\n\n    _this._handleRelease = function (nativeEvent) {\n      var velocityX = nativeEvent.velocityX,\n          dragX = nativeEvent.translationX;\n      var _this$state = _this.state,\n          _this$state$leftWidth = _this$state.leftWidth,\n          leftWidth = _this$state$leftWidth === void 0 ? 0 : _this$state$leftWidth,\n          _this$state$rowWidth = _this$state.rowWidth,\n          rowWidth = _this$state$rowWidth === void 0 ? 0 : _this$state$rowWidth,\n          rowState = _this$state.rowState;\n      var _this$state$rightOffs = _this.state.rightOffset,\n          rightOffset = _this$state$rightOffs === void 0 ? rowWidth : _this$state$rightOffs;\n      var rightWidth = rowWidth - rightOffset;\n      var _this$props = _this.props,\n          friction = _this$props.friction,\n          _this$props$leftThres = _this$props.leftThreshold,\n          leftThreshold = _this$props$leftThres === void 0 ? leftWidth / 2 : _this$props$leftThres,\n          _this$props$rightThre = _this$props.rightThreshold,\n          rightThreshold = _this$props$rightThre === void 0 ? rightWidth / 2 : _this$props$rightThre;\n      var startOffsetX = _this._currentOffset() + dragX / friction;\n      var translationX = (dragX + DRAG_TOSS * velocityX) / friction;\n      var toValue = 0;\n\n      if (rowState === 0) {\n        if (translationX > leftThreshold) {\n          toValue = leftWidth;\n        } else if (translationX < -rightThreshold) {\n          toValue = -rightWidth;\n        }\n      } else if (rowState === 1) {\n        if (translationX > -leftThreshold) {\n          toValue = leftWidth;\n        }\n      } else {\n        if (translationX < rightThreshold) {\n          toValue = -rightWidth;\n        }\n      }\n\n      _this._animateRow(startOffsetX, toValue, velocityX / friction);\n    };\n\n    _this._animateRow = function (fromValue, toValue, velocityX) {\n      var _this$state2 = _this.state,\n          dragX = _this$state2.dragX,\n          rowTranslation = _this$state2.rowTranslation;\n      dragX.setValue(0);\n      rowTranslation.setValue(fromValue);\n\n      _this.setState({\n        rowState: Math.sign(toValue)\n      });\n\n      _reactNative.Animated.spring(rowTranslation, _objectSpread({\n        restSpeedThreshold: 1.7,\n        restDisplacementThreshold: 0.4,\n        velocity: velocityX,\n        bounciness: 0,\n        toValue: toValue,\n        useNativeDriver: _this.props.useNativeAnimations\n      }, _this.props.animationOptions)).start(function (_ref3) {\n        var finished = _ref3.finished;\n\n        if (finished) {\n          if (toValue > 0 && _this.props.onSwipeableLeftOpen) {\n            _this.props.onSwipeableLeftOpen();\n          } else if (toValue < 0 && _this.props.onSwipeableRightOpen) {\n            _this.props.onSwipeableRightOpen();\n          }\n\n          if (toValue === 0) {\n            _this.props.onSwipeableClose && _this.props.onSwipeableClose();\n          } else {\n            _this.props.onSwipeableOpen && _this.props.onSwipeableOpen();\n          }\n        }\n      });\n\n      if (toValue > 0 && _this.props.onSwipeableLeftWillOpen) {\n        _this.props.onSwipeableLeftWillOpen();\n      } else if (toValue < 0 && _this.props.onSwipeableRightWillOpen) {\n        _this.props.onSwipeableRightWillOpen();\n      }\n\n      if (toValue === 0) {\n        _this.props.onSwipeableWillClose && _this.props.onSwipeableWillClose();\n      } else {\n        _this.props.onSwipeableWillOpen && _this.props.onSwipeableWillOpen();\n      }\n    };\n\n    _this._onRowLayout = function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n\n      _this.setState({\n        rowWidth: nativeEvent.layout.width\n      });\n    };\n\n    _this._currentOffset = function () {\n      var _this$state3 = _this.state,\n          _this$state3$leftWidt = _this$state3.leftWidth,\n          leftWidth = _this$state3$leftWidt === void 0 ? 0 : _this$state3$leftWidt,\n          _this$state3$rowWidth = _this$state3.rowWidth,\n          rowWidth = _this$state3$rowWidth === void 0 ? 0 : _this$state3$rowWidth,\n          rowState = _this$state3.rowState;\n      var _this$state$rightOffs2 = _this.state.rightOffset,\n          rightOffset = _this$state$rightOffs2 === void 0 ? rowWidth : _this$state$rightOffs2;\n      var rightWidth = rowWidth - rightOffset;\n\n      if (rowState === 1) {\n        return leftWidth;\n      } else if (rowState === -1) {\n        return -rightWidth;\n      }\n\n      return 0;\n    };\n\n    _this.close = function () {\n      _this._animateRow(_this._currentOffset(), 0);\n    };\n\n    _this.openLeft = function () {\n      var _this$state$leftWidth2 = _this.state.leftWidth,\n          leftWidth = _this$state$leftWidth2 === void 0 ? 0 : _this$state$leftWidth2;\n\n      _this._animateRow(_this._currentOffset(), leftWidth);\n    };\n\n    _this.openRight = function () {\n      var _this$state$rowWidth2 = _this.state.rowWidth,\n          rowWidth = _this$state$rowWidth2 === void 0 ? 0 : _this$state$rowWidth2;\n      var _this$state$rightOffs3 = _this.state.rightOffset,\n          rightOffset = _this$state$rightOffs3 === void 0 ? rowWidth : _this$state$rightOffs3;\n      var rightWidth = rowWidth - rightOffset;\n\n      _this._animateRow(_this._currentOffset(), -rightWidth);\n    };\n\n    var _dragX = new _reactNative.Animated.Value(0);\n\n    _this.state = {\n      dragX: _dragX,\n      rowTranslation: new _reactNative.Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined\n    };\n\n    _this._updateAnimatedEvent(_props, _this.state);\n\n    _this._onGestureEvent = _reactNative.Animated.event([{\n      nativeEvent: {\n        translationX: _dragX\n      }\n    }], {\n      useNativeDriver: _props.useNativeAnimations\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(Swipeable, [{\n    key: \"UNSAFE_componentWillUpdate\",\n    value: function UNSAFE_componentWillUpdate(props, state) {\n      if (this.props.friction !== props.friction || this.props.overshootLeft !== props.overshootLeft || this.props.overshootRight !== props.overshootRight || this.props.overshootFriction !== props.overshootFriction || this.state.leftWidth !== state.leftWidth || this.state.rightOffset !== state.rightOffset || this.state.rowWidth !== state.rowWidth) {\n        this._updateAnimatedEvent(props, state);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var rowState = this.state.rowState;\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          renderLeftActions = _this$props2.renderLeftActions,\n          renderRightActions = _this$props2.renderRightActions;\n\n      var left = renderLeftActions && _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.leftActions, {\n          transform: [{\n            translateX: this._leftActionTranslate\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 7\n        }\n      }, renderLeftActions(this._showLeftAction, this._transX), _react.default.createElement(_reactNative.View, {\n        onLayout: function onLayout(_ref5) {\n          var nativeEvent = _ref5.nativeEvent;\n          return _this2.setState({\n            leftWidth: nativeEvent.layout.x\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 9\n        }\n      }));\n\n      var right = renderRightActions && _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.rightActions, {\n          transform: [{\n            translateX: this._rightActionTranslate\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 7\n        }\n      }, renderRightActions(this._showRightAction, this._transX), _react.default.createElement(_reactNative.View, {\n        onLayout: function onLayout(_ref6) {\n          var nativeEvent = _ref6.nativeEvent;\n          return _this2.setState({\n            rightOffset: nativeEvent.layout.x\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 9\n        }\n      }));\n\n      return _react.default.createElement(_GestureHandler.PanGestureHandler, (0, _extends2.default)({\n        activeOffsetX: [-10, 10]\n      }, this.props, {\n        onGestureEvent: this._onGestureEvent,\n        onHandlerStateChange: this._onHandlerStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 7\n        }\n      }), _react.default.createElement(_reactNative.Animated.View, {\n        onLayout: this._onRowLayout,\n        style: [styles.container, this.props.containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 9\n        }\n      }, left, right, _react.default.createElement(_GestureHandler.TapGestureHandler, {\n        enabled: rowState !== 0,\n        onHandlerStateChange: this._onTapHandlerStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Animated.View, {\n        pointerEvents: rowState === 0 ? 'auto' : 'box-only',\n        style: [{\n          transform: [{\n            translateX: this._transX\n          }]\n        }, this.props.childrenContainerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }\n      }, children))));\n    }\n  }]);\n  return Swipeable;\n}(_react.Component);\n\nexports.default = Swipeable;\nSwipeable.defaultProps = {\n  friction: 1,\n  overshootFriction: 1,\n  useNativeAnimations: true\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  },\n  leftActions: _objectSpread(_objectSpread({}, _reactNative.StyleSheet.absoluteFillObject), {}, {\n    flexDirection: _reactNative.I18nManager.isRTL ? 'row-reverse' : 'row'\n  }),\n  rightActions: _objectSpread(_objectSpread({}, _reactNative.StyleSheet.absoluteFillObject), {}, {\n    flexDirection: _reactNative.I18nManager.isRTL ? 'row' : 'row-reverse'\n  })\n});","map":{"version":3,"names":["DRAG_TOSS","Swipeable","props","_updateAnimatedEvent","state","friction","overshootFriction","useNativeAnimations","dragX","rowTranslation","leftWidth","rowWidth","rightOffset","rightWidth","Math","max","overshootLeft","overshootRight","transX","Animated","add","interpolate","inputRange","outputRange","_transX","_showLeftAction","Value","_leftActionTranslate","Number","MIN_VALUE","extrapolate","_showRightAction","_rightActionTranslate","_onTapHandlerStateChange","nativeEvent","oldState","State","ACTIVE","close","_onHandlerStateChange","_handleRelease","velocityX","translationX","rowState","leftThreshold","rightThreshold","startOffsetX","_currentOffset","toValue","_animateRow","fromValue","setValue","setState","sign","spring","restSpeedThreshold","restDisplacementThreshold","velocity","bounciness","useNativeDriver","animationOptions","start","finished","onSwipeableLeftOpen","onSwipeableRightOpen","onSwipeableClose","onSwipeableOpen","onSwipeableLeftWillOpen","onSwipeableRightWillOpen","onSwipeableWillClose","onSwipeableWillOpen","_onRowLayout","layout","width","openLeft","openRight","undefined","_onGestureEvent","event","children","renderLeftActions","renderRightActions","left","styles","leftActions","transform","translateX","x","right","rightActions","container","containerStyle","childrenContainerStyle","Component","defaultProps","StyleSheet","create","overflow","absoluteFillObject","flexDirection","I18nManager","isRTL"],"sources":["C:/wks/reactnative/prueba/kitten2/node_modules/react-native-gesture-handler/Swipeable.js"],"sourcesContent":["// @flow\n\n// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us\n// to move faster and fix possible issues quicker\n\nimport React, { Component } from 'react';\nimport { Animated, StyleSheet, View, I18nManager } from 'react-native';\n\nimport { PanGestureHandler, TapGestureHandler, State } from './GestureHandler';\n\nconst DRAG_TOSS = 0.05;\n\nexport type PropType = {\n  children: any,\n  friction: number,\n  leftThreshold?: number,\n  rightThreshold?: number,\n  overshootLeft?: boolean,\n  overshootRight?: boolean,\n  overshootFriction: number,\n  onSwipeableLeftOpen?: Function,\n  onSwipeableRightOpen?: Function,\n  onSwipeableOpen?: Function,\n  onSwipeableClose?: Function,\n  onSwipeableLeftWillOpen?: Function,\n  onSwipeableRightWillOpen?: Function,\n  onSwipeableWillOpen?: Function,\n  onSwipeableWillClose?: Function,\n  renderLeftActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  renderRightActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  useNativeAnimations: boolean,\n  animationOptions?: Object,\n  containerStyle?: Object,\n  childrenContainerStyle?: Object,\n};\ntype StateType = {\n  dragX: Animated.Value,\n  rowTranslation: Animated.Value,\n  rowState: number,\n  leftWidth: number | typeof undefined,\n  rightOffset: number | typeof undefined,\n  rowWidth: number | typeof undefined,\n};\n\nexport default class Swipeable extends Component<PropType, StateType> {\n  static defaultProps = {\n    friction: 1,\n    overshootFriction: 1,\n    useNativeAnimations: true,\n  };\n  _onGestureEvent: ?Animated.Event;\n  _transX: ?Animated.Interpolation;\n  _showLeftAction: ?Animated.Interpolation | ?Animated.Value;\n  _leftActionTranslate: ?Animated.Interpolation;\n  _showRightAction: ?Animated.Interpolation | ?Animated.Value;\n  _rightActionTranslate: ?Animated.Interpolation;\n\n  constructor(props: PropType) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this._updateAnimatedEvent(props, this.state);\n\n    this._onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations }\n    );\n  }\n\n  UNSAFE_componentWillUpdate(props: PropType, state: StateType) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.props.overshootFriction !== props.overshootFriction ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this._updateAnimatedEvent(props, state);\n    }\n  }\n\n  _updateAnimatedEvent = (props: PropType, state: StateType) => {\n    const { friction, overshootFriction, useNativeAnimations } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const {\n      overshootLeft = leftWidth > 0,\n      overshootRight = rightWidth > 0,\n    } = props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [\n        -rightWidth - (overshootRight ? 1 : overshootFriction),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 : overshootFriction),\n      ],\n      outputRange: [\n        -rightWidth - (overshootRight || overshootFriction > 1 ? 1 : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft || overshootFriction > 1 ? 1 : 0),\n      ],\n    });\n    this._transX = transX;\n    this._showLeftAction =\n      leftWidth > 0\n        ? transX.interpolate({\n            inputRange: [-1, 0, leftWidth],\n            outputRange: [0, 0, 1],\n          })\n        : new Animated.Value(0);\n    this._leftActionTranslate = this._showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this._showRightAction =\n      rightWidth > 0\n        ? transX.interpolate({\n            inputRange: [-rightWidth, 0, 1],\n            outputRange: [1, 0, 0],\n          })\n        : new Animated.Value(0);\n    this._rightActionTranslate = this._showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  _onTapHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  _onHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this._handleRelease(nativeEvent);\n    }\n  };\n\n  _handleRelease = nativeEvent => {\n    const { velocityX, translationX: dragX } = nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this._currentOffset() + dragX / friction;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this._animateRow(startOffsetX, toValue, velocityX / friction);\n  };\n\n  _animateRow = (fromValue, toValue, velocityX) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0 && this.props.onSwipeableLeftOpen) {\n          this.props.onSwipeableLeftOpen();\n        } else if (toValue < 0 && this.props.onSwipeableRightOpen) {\n          this.props.onSwipeableRightOpen();\n        }\n\n        if (toValue === 0) {\n          this.props.onSwipeableClose && this.props.onSwipeableClose();\n        } else {\n          this.props.onSwipeableOpen && this.props.onSwipeableOpen();\n        }\n      }\n    });\n    if (toValue > 0 && this.props.onSwipeableLeftWillOpen) {\n      this.props.onSwipeableLeftWillOpen();\n    } else if (toValue < 0 && this.props.onSwipeableRightWillOpen) {\n      this.props.onSwipeableRightWillOpen();\n    }\n\n    if (toValue === 0) {\n      this.props.onSwipeableWillClose && this.props.onSwipeableWillClose();\n    } else {\n      this.props.onSwipeableWillOpen && this.props.onSwipeableWillOpen();\n    }\n  };\n\n  _onRowLayout = ({ nativeEvent }) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  _currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this._animateRow(this._currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this._animateRow(this._currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this._animateRow(this._currentOffset(), -rightWidth);\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const { children, renderLeftActions, renderRightActions } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          { transform: [{ translateX: this._leftActionTranslate }] },\n        ]}>\n        {renderLeftActions(this._showLeftAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this._rightActionTranslate }] },\n        ]}>\n        {renderRightActions(this._showRightAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        activeOffsetX={[-10, 10]}\n        {...this.props}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}>\n        <Animated.View\n          onLayout={this._onRowLayout}\n          style={[styles.container, this.props.containerStyle]}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            onHandlerStateChange={this._onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={[\n                {\n                  transform: [{ translateX: this._transX }],\n                },\n                this.props.childrenContainerStyle,\n              ]}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL? 'row-reverse': 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}