{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _excluded = [\"index\"],\n    _excluded2 = [\"style\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_native_1 = require(\"react-native\");\n\nvar devsupport_1 = require(\"../../devsupport\");\n\nvar TabIndicator = function (_react_1$default$Comp) {\n  _inherits(TabIndicator, _react_1$default$Comp);\n\n  var _super = _createSuper(TabIndicator);\n\n  function TabIndicator() {\n    var _this;\n\n    _classCallCheck(this, TabIndicator);\n\n    _this = _super.apply(this, arguments);\n    _this.indicatorWidth = 0;\n    _this.contentOffset = new react_native_1.Animated.Value(0);\n\n    _this.onContentOffsetAnimationStateChanged = function (state) {};\n\n    _this.onContentOffsetAnimationStateEnd = function (result) {};\n\n    _this.createOffsetAnimation = function (params) {\n      return react_native_1.Animated.timing(_this.contentOffset, {\n        toValue: devsupport_1.RTLService.select(params.offset, -params.offset),\n        duration: 200,\n        easing: react_native_1.Easing.linear,\n        useNativeDriver: react_native_1.Platform.OS !== 'web'\n      });\n    };\n\n    _this.onLayout = function (event) {\n      _this.indicatorWidth = event.nativeEvent.layout.width;\n\n      _this.scrollToOffset({\n        offset: _this.indicatorWidth * _this.props.selectedPosition,\n        animated: false\n      });\n    };\n\n    _this.getComponentStyle = function () {\n      var widthPercent = 100 / _this.props.positions;\n      return {\n        width: widthPercent + \"%\",\n        position: 'absolute',\n        transform: [{\n          translateX: _this.contentOffset\n        }]\n      };\n    };\n\n    _this.renderIndicatorLine = function (style) {\n      return react_1.default.createElement(react_native_1.View, {\n        testID: 'indicator body',\n        style: [{\n          width: '100%',\n          alignSelf: 'center'\n        }, style]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TabIndicator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var index = this.props.selectedPosition;\n      this.scrollToIndex({\n        index: index,\n        animated: true\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.contentOffset.removeAllListeners();\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var index = params.index,\n          rest = _objectWithoutProperties(params, _excluded);\n\n      var offset = this.indicatorWidth * index;\n      this.scrollToOffset(_extends({\n        offset: offset\n      }, rest));\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          viewProps = _objectWithoutProperties(_this$props, _excluded2);\n\n      var evaStyle = this.getComponentStyle();\n      var indicatorLine = this.renderIndicatorLine(style);\n      return react_1.default.createElement(react_native_1.Animated.View, _extends({}, viewProps, {\n        style: [evaStyle],\n        onLayout: this.onLayout\n      }), indicatorLine);\n    }\n  }]);\n\n  return TabIndicator;\n}(react_1.default.Component);\n\nexports.TabIndicator = TabIndicator;\nTabIndicator.defaultProps = {\n  selectedPosition: 0\n};","map":{"version":3,"sources":["../../../../../src/components/ui/shared/tabIndicator.component.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst devsupport_1 = require(\"../../devsupport\");\nclass TabIndicator extends react_1.default.Component {\n    constructor() {\n        super(...arguments);\n        this.indicatorWidth = 0;\n        this.contentOffset = new react_native_1.Animated.Value(0);\n        this.onContentOffsetAnimationStateChanged = (state) => {\n            // no-op\n        };\n        this.onContentOffsetAnimationStateEnd = (result) => {\n            // no-op\n        };\n        this.createOffsetAnimation = (params) => {\n            return react_native_1.Animated.timing(this.contentOffset, {\n                toValue: devsupport_1.RTLService.select(params.offset, -params.offset),\n                duration: 200,\n                easing: react_native_1.Easing.linear,\n                useNativeDriver: react_native_1.Platform.OS !== 'web',\n            });\n        };\n        this.onLayout = (event) => {\n            this.indicatorWidth = event.nativeEvent.layout.width;\n            this.scrollToOffset({\n                offset: this.indicatorWidth * this.props.selectedPosition,\n                animated: false,\n            });\n        };\n        this.getComponentStyle = () => {\n            const widthPercent = 100 / this.props.positions;\n            return {\n                width: `${widthPercent}%`,\n                position: 'absolute',\n                // @ts-ignore: RN has no types for `Animated` styles\n                transform: [{ translateX: this.contentOffset }],\n            };\n        };\n        this.renderIndicatorLine = (style) => {\n            return (react_1.default.createElement(react_native_1.View, { testID: 'indicator body', style: [{ width: '100%', alignSelf: 'center' }, style] }));\n        };\n    }\n    componentDidMount() {\n        this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n    }\n    componentDidUpdate() {\n        const { selectedPosition: index } = this.props;\n        this.scrollToIndex({\n            index,\n            animated: true,\n        });\n    }\n    componentWillUnmount() {\n        this.contentOffset.removeAllListeners();\n    }\n    /**\n     * scrolls indicator to passed index\n     *\n     * @param params (object) - {\n     *  index: number,\n     *  animated: boolean | undefined\n     * }\n     */\n    scrollToIndex(params) {\n        const { index, ...rest } = params;\n        const offset = this.indicatorWidth * index;\n        this.scrollToOffset({ offset, ...rest });\n    }\n    /**\n     * scrolls indicator to passed offset\n     *\n     * @param params (object) - {\n     *  offset: number,\n     *  animated: boolean | undefined\n     * }\n     */\n    scrollToOffset(params) {\n        this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n    }\n    render() {\n        const { style, ...viewProps } = this.props;\n        const evaStyle = this.getComponentStyle();\n        const indicatorLine = this.renderIndicatorLine(style);\n        return (react_1.default.createElement(react_native_1.Animated.View, Object.assign({}, viewProps, { style: [evaStyle], onLayout: this.onLayout }), indicatorLine));\n    }\n}\nexports.TabIndicator = TabIndicator;\nTabIndicator.defaultProps = {\n    selectedPosition: 0,\n};\n//# sourceMappingURL=tabIndicator.component.js.map"]},"metadata":{},"sourceType":"script"}