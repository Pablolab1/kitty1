{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebBrowserService = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar WebBrowser = _interopRequireWildcard(require(\"expo-web-browser\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar WebBrowserService = (0, _createClass2.default)(function WebBrowserService() {\n  (0, _classCallCheck2.default)(this, WebBrowserService);\n});\nexports.WebBrowserService = WebBrowserService;\n\nWebBrowserService.openBrowserAsync = function (url) {\n  return WebBrowser.openBrowserAsync(url);\n};","map":{"version":3,"names":["WebBrowserService","openBrowserAsync","url","WebBrowser"],"sources":["C:/wks/reactnative/prueba/kitten2/src/services/web-browser.service.expo.ts"],"sourcesContent":["import * as WebBrowser from 'expo-web-browser';\n\nexport class WebBrowserService {\n\n  static openBrowserAsync = (url: string): Promise<any> => {\n    return WebBrowser.openBrowserAsync(url);\n  };\n}\n"],"mappings":";;;;;;;;;;;AAAA;;;;;;IAEaA,iB;;;;;AAAAA,iB,CAEJC,gB,GAAmB,UAACC,GAAD,EAA+B;EACvD,OAAOC,UAAU,CAACF,gBAAX,CAA4BC,GAA5B,CAAP;AACD,C"},"metadata":{},"sourceType":"script"}