{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\n\nvar _constants = require(\"./constants\");\n\nvar _Errors = require(\"./Errors\");\n\nvar _DraggingGestureHandler = _interopRequireDefault(require(\"./DraggingGestureHandler\"));\n\nvar _utils = require(\"./utils\");\n\nvar _excluded = [\"maxPointers\", \"deltaX\", \"deltaY\"],\n    _excluded2 = [\"numberOfPointers\", \"direction\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar FlingGestureHandler = function (_DraggingGestureHandl) {\n  (0, _inherits2.default)(FlingGestureHandler, _DraggingGestureHandl);\n\n  var _super = _createSuper(FlingGestureHandler);\n\n  function FlingGestureHandler() {\n    (0, _classCallCheck2.default)(this, FlingGestureHandler);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(FlingGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'swipe';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Swipe;\n    }\n  }, {\n    key: \"onGestureActivated\",\n    value: function onGestureActivated(event) {\n      this.sendEvent(_objectSpread(_objectSpread({}, event), {}, {\n        eventType: _hammerjs.default.INPUT_MOVE,\n        isFinal: false,\n        isFirst: true\n      }));\n      this.isGestureRunning = false;\n      this.hasGestureFailed = false;\n      this.sendEvent(_objectSpread(_objectSpread({}, event), {}, {\n        eventType: _hammerjs.default.INPUT_END,\n        isFinal: true\n      }));\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this = this;\n\n      (0, _get2.default)((0, _getPrototypeOf2.default)(FlingGestureHandler.prototype), \"onRawEvent\", this).call(this, ev);\n\n      if (this.hasGestureFailed) {\n        return;\n      }\n\n      if (ev.isFinal) {\n        setTimeout(function () {\n          if (_this.isGestureRunning) {\n            _this.cancelEvent(ev);\n          }\n        });\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        var gesture = this.hammer.get(this.name);\n\n        if (gesture.options.enable(gesture, ev)) {\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return {\n        pointers: this.config.numberOfPointers,\n        direction: this.getDirection()\n      };\n    }\n  }, {\n    key: \"getTargetDirections\",\n    value: function getTargetDirections(direction) {\n      var directions = [];\n\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(_hammerjs.default.DIRECTION_RIGHT);\n      }\n\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(_hammerjs.default.DIRECTION_LEFT);\n      }\n\n      if (direction & _constants.Direction.UP) {\n        directions.push(_hammerjs.default.DIRECTION_UP);\n      }\n\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(_hammerjs.default.DIRECTION_DOWN);\n      }\n\n      return directions;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function getDirection() {\n      var _this$getConfig = this.getConfig(),\n          direction = _this$getConfig.direction;\n\n      var directions = [];\n\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(_hammerjs.default.DIRECTION_HORIZONTAL);\n      }\n\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(_hammerjs.default.DIRECTION_HORIZONTAL);\n      }\n\n      if (direction & _constants.Direction.UP) {\n        directions.push(_hammerjs.default.DIRECTION_VERTICAL);\n      }\n\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(_hammerjs.default.DIRECTION_VERTICAL);\n      }\n\n      directions = (0, _toConsumableArray2.default)(new Set(directions));\n      if (directions.length === 0) return _hammerjs.default.DIRECTION_NONE;\n      if (directions.length === 1) return directions[0];\n      return _hammerjs.default.DIRECTION_ALL;\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref, recognizer, _ref2) {\n      var minPointers = _ref.minPointers,\n          maxPointers = _ref.maxPointers,\n          numberOfPointers = _ref.numberOfPointers,\n          maxDist = _ref.maxDist,\n          maxDeltaX = _ref.maxDeltaX,\n          maxDeltaY = _ref.maxDeltaY,\n          maxDistSq = _ref.maxDistSq,\n          shouldCancelWhenOutside = _ref.shouldCancelWhenOutside;\n      var pointerLength = _ref2.maxPointers,\n          dx = _ref2.deltaX,\n          dy = _ref2.deltaY,\n          props = (0, _objectWithoutProperties2.default)(_ref2, _excluded);\n      var validPointerCount = pointerLength === numberOfPointers;\n\n      if (!validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n\n      return {\n        success: validPointerCount\n      };\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref3) {\n      var _ref3$numberOfPointer = _ref3.numberOfPointers,\n          numberOfPointers = _ref3$numberOfPointer === void 0 ? 1 : _ref3$numberOfPointer,\n          direction = _ref3.direction,\n          props = (0, _objectWithoutProperties2.default)(_ref3, _excluded2);\n\n      if ((0, _utils.isnan)(direction) || typeof direction !== 'number') {\n        throw new _Errors.GesturePropError('direction', direction, 'number');\n      }\n\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(FlingGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        numberOfPointers: numberOfPointers,\n        direction: direction\n      }, props));\n    }\n  }]);\n  return FlingGestureHandler;\n}(_DraggingGestureHandler.default);\n\nvar _default = FlingGestureHandler;\nexports.default = _default;","map":{"version":3,"names":["FlingGestureHandler","Hammer","Swipe","event","sendEvent","eventType","INPUT_MOVE","isFinal","isFirst","isGestureRunning","hasGestureFailed","INPUT_END","ev","setTimeout","cancelEvent","gesture","hammer","get","name","options","enable","onStart","pointers","config","numberOfPointers","direction","getDirection","directions","Direction","RIGHT","push","DIRECTION_RIGHT","LEFT","DIRECTION_LEFT","UP","DIRECTION_UP","DOWN","DIRECTION_DOWN","getConfig","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","Set","length","DIRECTION_NONE","DIRECTION_ALL","recognizer","minPointers","maxPointers","maxDist","maxDeltaX","maxDeltaY","maxDistSq","shouldCancelWhenOutside","pointerLength","dx","deltaX","dy","deltaY","props","validPointerCount","failed","success","isnan","GesturePropError","DraggingGestureHandler"],"sources":["C:/wks/reactnative/prueba/kitten2/node_modules/react-native-gesture-handler/web/FlingGestureHandler.js"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport { Direction } from './constants';\nimport { GesturePropError } from './Errors';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isnan } from './utils';\n\nclass FlingGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'swipe';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Swipe;\n  }\n\n  onGestureActivated(event) {\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_MOVE,\n      isFinal: false,\n      isFirst: true,\n    });\n    this.isGestureRunning = false;\n    this.hasGestureFailed = false;\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_END,\n      isFinal: true,\n    });\n  }\n\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      setTimeout(() => {\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer.get(this.name);\n      if (gesture.options.enable(gesture, ev)) {\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      pointers: this.config.numberOfPointers,\n      direction: this.getDirection(),\n    };\n  }\n\n  getTargetDirections(direction) {\n    const directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_RIGHT);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_LEFT);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_UP);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_DOWN);\n    }\n    // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n    return directions;\n  }\n\n  getDirection() {\n    const { direction } = this.getConfig();\n\n    let directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    directions = [...new Set(directions)];\n\n    if (directions.length === 0) return Hammer.DIRECTION_NONE;\n    if (directions.length === 1) return directions[0];\n    return Hammer.DIRECTION_ALL;\n  }\n\n  isGestureEnabledForEvent(\n    {\n      minPointers,\n      maxPointers,\n      numberOfPointers,\n      maxDist,\n      maxDeltaX,\n      maxDeltaY,\n      maxDistSq,\n      shouldCancelWhenOutside,\n    },\n    recognizer,\n    { maxPointers: pointerLength, deltaX: dx, deltaY: dy, ...props }\n  ) {\n    const validPointerCount = pointerLength === numberOfPointers;\n    if (!validPointerCount && this.isGestureRunning) {\n      return { failed: true };\n    }\n    return { success: validPointerCount };\n  }\n\n  updateGestureConfig({ numberOfPointers = 1, direction, ...props }) {\n    if (isnan(direction) || typeof direction !== 'number') {\n      throw new GesturePropError('direction', direction, 'number');\n    }\n    return super.updateGestureConfig({\n      numberOfPointers,\n      direction,\n      ...props,\n    });\n  }\n}\n\nexport default FlingGestureHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}