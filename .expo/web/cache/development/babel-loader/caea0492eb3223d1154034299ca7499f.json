{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IconShowcase = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _components = require(\"@ui-kitten/components\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wks\\\\reactnative\\\\prueba\\\\kitten2\\\\src\\\\scenes\\\\components\\\\icon\\\\icon-showcase.component.tsx\";\n\nvar DEFAULT_ICON = 'star';\n\nvar IconShowcase = function IconShowcase(props) {\n  var iconRef = _react.default.useRef();\n\n  var _React$useState = _react.default.useState(DEFAULT_ICON),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      currentIcon = _React$useState2[0],\n      setCurrentIcon = _React$useState2[1];\n\n  var inputValue = DEFAULT_ICON;\n\n  _react.default.useEffect(function () {\n    var animationTimeout = setTimeout(startAnimation, 500);\n    return function () {\n      return clearTimeout(animationTimeout);\n    };\n  });\n\n  var onInputChangeText = function onInputChangeText(text) {\n    inputValue = text;\n  };\n\n  var onInputBlur = function onInputBlur() {\n    iconRef.current.startAnimation();\n    setCurrentIcon(inputValue.length > 0 ? inputValue : DEFAULT_ICON);\n  };\n\n  var startAnimation = function startAnimation() {\n    iconRef.current.startAnimation();\n  };\n\n  var renderIcon = function renderIcon(style) {\n    return _react.default.createElement(_components.Icon, (0, _extends2.default)({}, props, style, {\n      ref: iconRef,\n      name: currentIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  return _react.default.createElement(_components.Input, {\n    style: {\n      flex: 1\n    },\n    placeholder: \"Type icon name\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    caption: \"Unfocus to change icon\",\n    captionIcon: renderIcon,\n    accessoryRight: renderIcon,\n    onChangeText: onInputChangeText,\n    onBlur: onInputBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n};\n\nexports.IconShowcase = IconShowcase;","map":{"version":3,"names":["DEFAULT_ICON","IconShowcase","props","iconRef","React","useRef","useState","currentIcon","setCurrentIcon","inputValue","useEffect","animationTimeout","setTimeout","startAnimation","clearTimeout","onInputChangeText","text","onInputBlur","current","length","renderIcon","style","flex"],"sources":["C:/wks/reactnative/prueba/kitten2/src/scenes/components/icon/icon-showcase.component.tsx"],"sourcesContent":["import React from 'react';\nimport { ImageStyle } from 'react-native';\nimport { Icon, IconProps, Input } from '@ui-kitten/components';\n\nconst DEFAULT_ICON: string = 'star';\n\nexport const IconShowcase = (props: IconProps): React.ReactElement => {\n\n  const iconRef = React.useRef();\n  const [currentIcon, setCurrentIcon] = React.useState<string>(DEFAULT_ICON);\n  let inputValue: string = DEFAULT_ICON;\n\n  React.useEffect(() => {\n    const animationTimeout = setTimeout(startAnimation, 500);\n    return () => clearTimeout(animationTimeout);\n  });\n\n  const onInputChangeText = (text: string): void => {\n    inputValue = text;\n  };\n\n  const onInputBlur = (): void => {\n    // @ts-ignore\n    iconRef.current.startAnimation();\n    setCurrentIcon(inputValue.length > 0 ? inputValue : DEFAULT_ICON);\n  };\n\n  const startAnimation = (): void => {\n    // @ts-ignore\n    iconRef.current.startAnimation();\n  };\n\n  const renderIcon = (style: ImageStyle): React.ReactElement => (\n    <Icon\n      {...props}\n      {...style}\n      ref={iconRef}\n      name={currentIcon}\n    />\n  );\n\n  return (\n    <Input\n      style={{ flex: 1 }}\n      placeholder='Type icon name'\n      autoCapitalize='none'\n      autoCorrect={false}\n      caption='Unfocus to change icon'\n      captionIcon={renderIcon}\n      accessoryRight={renderIcon}\n      onChangeText={onInputChangeText}\n      onBlur={onInputBlur}\n    />\n  );\n};\n"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;;AAEA,IAAMA,YAAoB,GAAG,MAA7B;;AAEO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAA0C;EAEpE,IAAMC,OAAO,GAAGC,cAAA,CAAMC,MAAN,EAAhB;;EACA,sBAAsCD,cAAA,CAAME,QAAN,CAAuBN,YAAvB,CAAtC;EAAA;EAAA,IAAOO,WAAP;EAAA,IAAoBC,cAApB;;EACA,IAAIC,UAAkB,GAAGT,YAAzB;;EAEAI,cAAA,CAAMM,SAAN,CAAgB,YAAM;IACpB,IAAMC,gBAAgB,GAAGC,UAAU,CAACC,cAAD,EAAiB,GAAjB,CAAnC;IACA,OAAO;MAAA,OAAMC,YAAY,CAACH,gBAAD,CAAlB;IAAA,CAAP;EACD,CAHD;;EAKA,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD,EAAwB;IAChDP,UAAU,GAAGO,IAAb;EACD,CAFD;;EAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAY;IAE9Bd,OAAO,CAACe,OAAR,CAAgBL,cAAhB;IACAL,cAAc,CAACC,UAAU,CAACU,MAAX,GAAoB,CAApB,GAAwBV,UAAxB,GAAqCT,YAAtC,CAAd;EACD,CAJD;;EAMA,IAAMa,cAAc,GAAG,SAAjBA,cAAiB,GAAY;IAEjCV,OAAO,CAACe,OAAR,CAAgBL,cAAhB;EACD,CAHD;;EAKA,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD;IAAA,OACjB,6BAAC,gBAAD,6BACMnB,KADN,EAEMmB,KAFN;MAGE,GAAG,EAAElB,OAHP;MAIE,IAAI,EAAEI,WAJR;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GADiB;EAAA,CAAnB;;EASA,OACE,6BAAC,iBAAD;IACE,KAAK,EAAE;MAAEe,IAAI,EAAE;IAAR,CADT;IAEE,WAAW,EAAC,gBAFd;IAGE,cAAc,EAAC,MAHjB;IAIE,WAAW,EAAE,KAJf;IAKE,OAAO,EAAC,wBALV;IAME,WAAW,EAAEF,UANf;IAOE,cAAc,EAAEA,UAPlB;IAQE,YAAY,EAAEL,iBARhB;IASE,MAAM,EAAEE,WATV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF;AAaD,CAhDM"},"metadata":{},"sourceType":"script"}