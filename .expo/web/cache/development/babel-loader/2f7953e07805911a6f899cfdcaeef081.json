{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShowcaseSettings = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _components = require(\"@ui-kitten/components\");\n\nvar _icons = require(\"./icons\");\n\nvar _appReload = require(\"../services/app-reload.service\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wks\\\\reactnative\\\\prueba\\\\kitten2\\\\src\\\\components\\\\showcase-settings.component.tsx\";\n\nvar ShowcaseSettings = function ShowcaseSettings(props) {\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      themesMenuVisible = _React$useState2[0],\n      setThemesMenuVisible = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState(false),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      settingsMenuVisible = _React$useState4[0],\n      setSettingsMenuVisible = _React$useState4[1];\n\n  var createSettingMenuItem = function createSettingMenuItem(setting, index) {\n    return _react.default.createElement(_components.MenuItem, {\n      key: index,\n      title: setting.description || setting.propertyName + \": \" + setting.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var createThemeMenuItem = function createThemeMenuItem(title, index) {\n    return _react.default.createElement(_components.MenuItem, {\n      key: index,\n      title: title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var onThemeSelect = function onThemeSelect(index) {\n    props.onThemeSelect(props.themes[index.row]);\n    setThemesMenuVisible(false);\n  };\n\n  var onResetButtonPress = function onResetButtonPress() {\n    props.onReset();\n  };\n\n  var onSettingSelect = function onSettingSelect(index) {\n    var setting = props.settings[index.row];\n    props.onSettingSelect((0, _defineProperty2.default)({}, setting.propertyName, setting.value));\n    setSettingsMenuVisible(false);\n  };\n\n  var createThemesMenuItems = function createThemesMenuItems() {\n    return props.themes && props.themes.map(createThemeMenuItem);\n  };\n\n  var createSettingsMenuItems = function createSettingsMenuItems() {\n    var settings = props.settings && props.settings.map(createSettingMenuItem);\n    return settings || [];\n  };\n\n  var toggleThemesMenu = function toggleThemesMenu() {\n    setThemesMenuVisible(!themesMenuVisible);\n  };\n\n  var toggleSettingsMenu = function toggleSettingsMenu() {\n    setSettingsMenuVisible(!settingsMenuVisible);\n  };\n\n  var toggleRtl = function toggleRtl() {\n    _reactNative.I18nManager.forceRTL(!_reactNative.I18nManager.isRTL);\n\n    _reactNative.I18nManager.allowRTL(_reactNative.I18nManager.isRTL);\n\n    _reactNative.Platform.OS !== 'web' && _appReload.AppReloadService.reload();\n  };\n\n  var renderRTLToggle = function renderRTLToggle() {\n    return _react.default.createElement(_components.CheckBox, {\n      checked: _reactNative.I18nManager.isRTL,\n      onChange: toggleRtl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    }, \"RTL\");\n  };\n\n  var renderButtonThemes = function renderButtonThemes() {\n    return _react.default.createElement(_components.Button, {\n      size: \"tiny\",\n      accessoryLeft: _icons.ColorPaletteIcon,\n      disabled: !props.themes,\n      onPress: toggleThemesMenu,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, \"THEMES\");\n  };\n\n  var renderButtonSettings = function renderButtonSettings() {\n    return _react.default.createElement(_components.Button, {\n      size: \"tiny\",\n      accessoryLeft: _icons.SettingsIcon,\n      disabled: !props.settings,\n      onPress: toggleSettingsMenu,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, \"SETTINGS\");\n  };\n\n  return _react.default.createElement(_components.Layout, {\n    style: styles.container,\n    level: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_components.OverflowMenu, {\n    visible: themesMenuVisible,\n    onSelect: onThemeSelect,\n    onBackdropPress: toggleThemesMenu,\n    anchor: renderButtonThemes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, createThemesMenuItems()), _react.default.createElement(_components.OverflowMenu, {\n    visible: settingsMenuVisible,\n    onSelect: onSettingSelect,\n    onBackdropPress: toggleSettingsMenu,\n    anchor: renderButtonSettings,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, createSettingsMenuItems()), _react.default.createElement(_components.Button, {\n    size: \"tiny\",\n    status: \"danger\",\n    accessoryLeft: _icons.TrashIcon,\n    disabled: !props.settings,\n    onPress: onResetButtonPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, \"RESET\"), __DEV__ && renderRTLToggle());\n};\n\nexports.ShowcaseSettings = ShowcaseSettings;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    paddingVertical: 16\n  }\n});","map":{"version":3,"names":["ShowcaseSettings","props","React","useState","themesMenuVisible","setThemesMenuVisible","settingsMenuVisible","setSettingsMenuVisible","createSettingMenuItem","setting","index","description","propertyName","value","createThemeMenuItem","title","onThemeSelect","themes","row","onResetButtonPress","onReset","onSettingSelect","settings","createThemesMenuItems","map","createSettingsMenuItems","toggleThemesMenu","toggleSettingsMenu","toggleRtl","I18nManager","forceRTL","isRTL","allowRTL","Platform","OS","AppReloadService","reload","renderRTLToggle","renderButtonThemes","ColorPaletteIcon","renderButtonSettings","SettingsIcon","styles","container","TrashIcon","__DEV__","StyleSheet","create","flexDirection","justifyContent","paddingVertical"],"sources":["C:/wks/reactnative/prueba/kitten2/src/components/showcase-settings.component.tsx"],"sourcesContent":["import React, { ReactElement } from 'react';\nimport { I18nManager, Platform, StyleSheet, ViewProps } from 'react-native';\nimport {\n  Button,\n  ButtonElement,\n  CheckBox,\n  IndexPath,\n  Layout,\n  OverflowMenu,\n  MenuItem,\n} from '@ui-kitten/components';\nimport { ColorPaletteIcon, SettingsIcon, TrashIcon } from './icons';\nimport { ComponentShowcaseSetting } from '../model/showcase.model';\nimport { Theme } from '../services/theme.service';\nimport { AppReloadService } from '../services/app-reload.service';\n\nexport interface ShowcaseSettingsProps extends ViewProps {\n  themes?: Theme[];\n  settings?: ComponentShowcaseSetting[];\n  onThemeSelect?: (theme: Theme) => void;\n  onSettingSelect?: (setting: { [prop: string]: any }) => void;\n  onReset: () => void;\n}\n\nexport const ShowcaseSettings = (props: ShowcaseSettingsProps): React.ReactElement => {\n  const [themesMenuVisible, setThemesMenuVisible] = React.useState<boolean>(\n    false,\n  );\n  const [settingsMenuVisible, setSettingsMenuVisible] = React.useState<boolean>(\n    false,\n  );\n\n  const createSettingMenuItem = (setting: ComponentShowcaseSetting, index: number): React.ReactElement => (\n    <MenuItem\n      key={index}\n      title={setting.description || `${setting.propertyName}: ${setting.value}`}\n    />\n  );\n\n  const createThemeMenuItem = (title: string, index: number): ReactElement => (\n    <MenuItem\n      key={index}\n      title={title}\n     />\n  );\n\n  const onThemeSelect = (index: IndexPath): void => {\n    props.onThemeSelect(props.themes[index.row]);\n    setThemesMenuVisible(false);\n  };\n\n  const onResetButtonPress = (): void => {\n    props.onReset();\n  };\n\n  const onSettingSelect = (index: IndexPath): void => {\n    const { [index.row]: setting } = props.settings;\n\n    props.onSettingSelect({\n      [setting.propertyName]: setting.value,\n    });\n\n    setSettingsMenuVisible(false);\n  };\n\n  const createThemesMenuItems = (): React.ReactElement[] => {\n    return props.themes && props.themes.map(createThemeMenuItem);\n  };\n\n  const createSettingsMenuItems = (): React.ReactElement[] => {\n    const settings = props.settings && props.settings.map(createSettingMenuItem);\n    return settings || [];\n  };\n\n  const toggleThemesMenu = (): void => {\n    setThemesMenuVisible(!themesMenuVisible);\n  };\n\n  const toggleSettingsMenu = (): void => {\n    setSettingsMenuVisible(!settingsMenuVisible);\n  };\n\n  const toggleRtl = (): void => {\n    I18nManager.forceRTL(!I18nManager.isRTL);\n    I18nManager.allowRTL(I18nManager.isRTL);\n    Platform.OS !== 'web' && AppReloadService.reload();\n  };\n\n  const renderRTLToggle = (): React.ReactElement => (\n    <CheckBox\n      checked={I18nManager.isRTL}\n      onChange={toggleRtl}>\n      RTL\n    </CheckBox>\n  );\n\n  const renderButtonThemes = (): ButtonElement => (\n    <Button\n      size='tiny'\n      accessoryLeft={ColorPaletteIcon}\n      disabled={!props.themes}\n      onPress={toggleThemesMenu}>\n      THEMES\n    </Button>\n  );\n\n  const renderButtonSettings = (): ButtonElement => (\n    <Button\n      size='tiny'\n      accessoryLeft={SettingsIcon}\n      disabled={!props.settings}\n      onPress={toggleSettingsMenu}>\n      SETTINGS\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container} level='1'>\n      <OverflowMenu\n        visible={themesMenuVisible}\n        onSelect={onThemeSelect}\n        onBackdropPress={toggleThemesMenu}\n        anchor={renderButtonThemes}>\n        {createThemesMenuItems()}\n      </OverflowMenu>\n      <OverflowMenu\n        visible={settingsMenuVisible}\n        onSelect={onSettingSelect}\n        onBackdropPress={toggleSettingsMenu}\n        anchor={renderButtonSettings}>\n        {createSettingsMenuItems()}\n      </OverflowMenu>\n      <Button\n        size='tiny'\n        status='danger'\n        accessoryLeft={TrashIcon}\n        disabled={!props.settings}\n        onPress={onResetButtonPress}>\n        RESET\n      </Button>\n      {__DEV__ && renderRTLToggle()}\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    paddingVertical: 16,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}