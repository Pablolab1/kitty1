{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _excluded = [\"children\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar checkbox_component_1 = require(\"../checkbox/checkbox.component\");\n\nvar selectItem_component_1 = require(\"./selectItem.component\");\n\nvar SelectGroup = function (_react_1$default$Comp) {\n  _inherits(SelectGroup, _react_1$default$Comp);\n\n  var _super = _createSuper(SelectGroup);\n\n  function SelectGroup() {\n    var _this;\n\n    _classCallCheck(this, SelectGroup);\n\n    _this = _super.apply(this, arguments);\n\n    _this.createAccessoryProps = function (props) {\n      return {\n        checked: props.selected,\n        onChange: function onChange() {\n          return props.onPress && props.onPress(props.descriptor);\n        }\n      };\n    };\n\n    _this.createGroupedItemProps = function (props) {\n      var accessoryProps = _this.createAccessoryProps(props);\n\n      return {\n        appearance: 'grouped',\n        accessoryLeft: function accessoryLeft(evaProps) {\n          return _this.renderAccessory(_extends({}, evaProps, accessoryProps));\n        }\n      };\n    };\n\n    _this.renderAccessory = function (props) {\n      if (!_this.isMultiSelect) {\n        return null;\n      }\n\n      return react_1.default.createElement(checkbox_component_1.CheckBox, _extends({}, props));\n    };\n\n    _this.renderGroupedItems = function (source) {\n      return react_1.default.Children.map(source, function (item, key) {\n        var groupedProps = _this.createGroupedItemProps(item.props);\n\n        return react_1.default.cloneElement(item, _extends({\n          key: key\n        }, groupedProps, item.props));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SelectGroup, [{\n    key: \"isMultiSelect\",\n    get: function get() {\n      if (this.props.descriptor) {\n        return this.props.descriptor.multiSelect;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"groupAccessoryState\",\n    get: function get() {\n      var nestedElements = react_1.default.Children.toArray(this.props.children);\n      var selectedElements = nestedElements.filter(function (el) {\n        return el.props.selected;\n      });\n      var indeterminate = selectedElements.length > 0 && selectedElements.length < nestedElements.length;\n      var checked = selectedElements.length === nestedElements.length;\n      return {\n        checked: checked,\n        indeterminate: indeterminate\n      };\n    }\n  }, {\n    key: \"groupAccessoryProps\",\n    get: function get() {\n      return _extends({}, this.createAccessoryProps(this.props), this.groupAccessoryState);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          itemProps = _objectWithoutProperties(_this$props, _excluded);\n\n      return react_1.default.createElement(react_1.default.Fragment, null, react_1.default.createElement(selectItem_component_1.SelectItem, _extends({\n        accessoryLeft: function accessoryLeft(evaProps) {\n          return _this2.renderAccessory(_extends({}, evaProps, _this2.groupAccessoryProps));\n        }\n      }, itemProps)), this.renderGroupedItems(children));\n    }\n  }]);\n\n  return SelectGroup;\n}(react_1.default.Component);\n\nexports.SelectGroup = SelectGroup;","map":{"version":3,"sources":["../../../../../src/components/ui/select/selectGroup.component.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst checkbox_component_1 = require(\"../checkbox/checkbox.component\");\nconst selectItem_component_1 = require(\"./selectItem.component\");\n/**\n * A group of items displayed in Select.\n * Groups should be rendered within Select and contain SelectItem components to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<SelectItemProps> | ReactElement<SelectItemProps>[]} children -\n * items to be rendered within group.\n *\n * @property {ReactElement | ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the group.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example SelectWithGroups\n */\nclass SelectGroup extends react_1.default.Component {\n    constructor() {\n        super(...arguments);\n        this.createAccessoryProps = (props) => {\n            return {\n                checked: props.selected,\n                onChange: () => props.onPress && props.onPress(props.descriptor),\n            };\n        };\n        this.createGroupedItemProps = (props) => {\n            const accessoryProps = this.createAccessoryProps(props);\n            return {\n                appearance: 'grouped',\n                accessoryLeft: evaProps => this.renderAccessory({ ...evaProps, ...accessoryProps }),\n            };\n        };\n        this.renderAccessory = (props) => {\n            if (!this.isMultiSelect) {\n                return null;\n            }\n            return (react_1.default.createElement(checkbox_component_1.CheckBox, Object.assign({}, props)));\n        };\n        this.renderGroupedItems = (source) => {\n            return react_1.default.Children.map(source, (item, key) => {\n                const groupedProps = this.createGroupedItemProps(item.props);\n                return react_1.default.cloneElement(item, { key, ...groupedProps, ...item.props });\n            });\n        };\n    }\n    get isMultiSelect() {\n        if (this.props.descriptor) {\n            return this.props.descriptor.multiSelect;\n        }\n        return false;\n    }\n    get groupAccessoryState() {\n        const nestedElements = react_1.default.Children.toArray(this.props.children);\n        const selectedElements = nestedElements.filter(el => el.props.selected);\n        const indeterminate = selectedElements.length > 0 && selectedElements.length < nestedElements.length;\n        const checked = selectedElements.length === nestedElements.length;\n        return { checked, indeterminate };\n    }\n    get groupAccessoryProps() {\n        return {\n            ...this.createAccessoryProps(this.props),\n            ...this.groupAccessoryState,\n        };\n    }\n    render() {\n        const { children, ...itemProps } = this.props;\n        return (react_1.default.createElement(react_1.default.Fragment, null,\n            react_1.default.createElement(selectItem_component_1.SelectItem, Object.assign({ accessoryLeft: evaProps => this.renderAccessory({ ...evaProps, ...this.groupAccessoryProps }) }, itemProps)),\n            this.renderGroupedItems(children)));\n    }\n}\nexports.SelectGroup = SelectGroup;\n//# sourceMappingURL=selectGroup.component.js.map"]},"metadata":{},"sourceType":"script"}