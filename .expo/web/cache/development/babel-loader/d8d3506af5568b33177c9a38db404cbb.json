{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\n\nvar _State = _interopRequireDefault(require(\"../State\"));\n\nvar _constants = require(\"./constants\");\n\nvar _DiscreteGestureHandler = _interopRequireDefault(require(\"./DiscreteGestureHandler\"));\n\nvar _utils = require(\"./utils\");\n\nvar _excluded = [\"shouldActivateOnStart\", \"disallowInterruption\", \"shouldCancelWhenOutside\", \"minDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar PressGestureHandler = function (_DiscreteGestureHandl) {\n  (0, _inherits2.default)(PressGestureHandler, _DiscreteGestureHandl);\n\n  var _super = _createSuper(PressGestureHandler);\n\n  function PressGestureHandler() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PressGestureHandler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.shouldDelayTouches = true;\n    return _this;\n  }\n\n  (0, _createClass2.default)(PressGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'press';\n    }\n  }, {\n    key: \"minDurationMs\",\n    get: function get() {\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n  }, {\n    key: \"maxDist\",\n    get: function get() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Press;\n    }\n  }, {\n    key: \"simulateCancelEvent\",\n    value: function simulateCancelEvent(inputData) {\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(_ref) {\n      var shouldCancelWhenOutside = _ref.shouldCancelWhenOutside,\n          maxDistSq = _ref.maxDistSq;\n      return shouldCancelWhenOutside || !(0, _utils.isValidNumber)(maxDistSq);\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var _Hammer$INPUT_START$H;\n\n      return (_Hammer$INPUT_START$H = {}, (0, _defineProperty2.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_START, _State.default.BEGAN), (0, _defineProperty2.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_MOVE, _State.default.ACTIVE), (0, _defineProperty2.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_END, _State.default.END), (0, _defineProperty2.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_CANCEL, _State.default.CANCELLED), _Hammer$INPUT_START$H)[type];\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this._hasCustomActivationCriteria) {\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n\n      return this.config;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread(_objectSpread({}, (0, _get2.default)((0, _getPrototypeOf2.default)(PressGestureHandler.prototype), \"getHammerConfig\", this).call(this)), {}, {\n        time: this.minDurationMs\n      });\n    }\n  }, {\n    key: \"onGestureActivated\",\n    value: function onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n  }, {\n    key: \"shouldDelayTouchForEvent\",\n    value: function shouldDelayTouchForEvent(_ref2) {\n      var pointerType = _ref2.pointerType;\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n  }, {\n    key: \"onGestureStart\",\n    value: function onGestureStart(ev) {\n      var _this2 = this;\n\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = (0, _utils.fireAfterInterval)(function () {\n        _this2.sendGestureStartedEvent(_this2.initialEvent);\n\n        _this2.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && _constants.CONTENT_TOUCHES_DELAY);\n    }\n  }, {\n    key: \"sendGestureStartedEvent\",\n    value: function sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n        eventType: _hammerjs.default.INPUT_MOVE,\n        isFirst: true\n      }));\n    }\n  }, {\n    key: \"forceInvalidate\",\n    value: function forceInvalidate(event) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PressGestureHandler.prototype), \"forceInvalidate\", this).call(this, event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this3 = this;\n\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PressGestureHandler.prototype), \"onRawEvent\", this).call(this, ev);\n\n      if (ev.isFinal && this.isGestureRunning) {\n        var timeout;\n\n        if (this.visualFeedbackTimer) {\n          timeout = _constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n          this.sendGestureStartedEvent(this.initialEvent);\n          this.initialEvent = null;\n        }\n\n        (0, _utils.fireAfterInterval)(function () {\n          _this3.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n            eventType: _hammerjs.default.INPUT_END,\n            isFinal: true\n          }));\n\n          _this3.onGestureEnded();\n        }, timeout);\n      }\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref3) {\n      var _ref3$shouldActivateO = _ref3.shouldActivateOnStart,\n          shouldActivateOnStart = _ref3$shouldActivateO === void 0 ? false : _ref3$shouldActivateO,\n          _ref3$disallowInterru = _ref3.disallowInterruption,\n          disallowInterruption = _ref3$disallowInterru === void 0 ? false : _ref3$disallowInterru,\n          _ref3$shouldCancelWhe = _ref3.shouldCancelWhenOutside,\n          shouldCancelWhenOutside = _ref3$shouldCancelWhe === void 0 ? true : _ref3$shouldCancelWhe,\n          _ref3$minDurationMs = _ref3.minDurationMs,\n          minDurationMs = _ref3$minDurationMs === void 0 ? Number.NaN : _ref3$minDurationMs,\n          _ref3$maxDist = _ref3.maxDist,\n          maxDist = _ref3$maxDist === void 0 ? Number.NaN : _ref3$maxDist,\n          _ref3$minPointers = _ref3.minPointers,\n          minPointers = _ref3$minPointers === void 0 ? 1 : _ref3$minPointers,\n          _ref3$maxPointers = _ref3.maxPointers,\n          maxPointers = _ref3$maxPointers === void 0 ? 1 : _ref3$maxPointers,\n          props = (0, _objectWithoutProperties2.default)(_ref3, _excluded);\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(PressGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        shouldActivateOnStart: shouldActivateOnStart,\n        disallowInterruption: disallowInterruption,\n        shouldCancelWhenOutside: shouldCancelWhenOutside,\n        minDurationMs: minDurationMs,\n        maxDist: maxDist,\n        minPointers: minPointers,\n        maxPointers: maxPointers\n      }, props));\n    }\n  }]);\n  return PressGestureHandler;\n}(_DiscreteGestureHandler.default);\n\nvar _default = PressGestureHandler;\nexports.default = _default;","map":{"version":3,"names":["PressGestureHandler","shouldDelayTouches","isnan","config","minDurationMs","maxDist","Hammer","Press","inputData","hasGestureFailed","cancelEvent","shouldCancelWhenOutside","maxDistSq","isValidNumber","type","INPUT_START","State","BEGAN","INPUT_MOVE","ACTIVE","INPUT_END","END","INPUT_CANCEL","CANCELLED","_hasCustomActivationCriteria","time","ev","onGestureStart","pointerType","isGestureRunning","clearTimeout","visualFeedbackTimer","initialEvent","fireAfterInterval","sendGestureStartedEvent","shouldDelayTouchForEvent","CONTENT_TOUCHES_DELAY","sendEvent","eventType","isFirst","event","isFinal","timeout","CONTENT_TOUCHES_QUICK_TAP_END_DELAY","onGestureEnded","shouldActivateOnStart","disallowInterruption","Number","NaN","minPointers","maxPointers","props","DiscreteGestureHandler"],"sources":["C:/wks/reactnative/prueba/kitten2/node_modules/react-native-gesture-handler/web/PressGestureHandler.js"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport State from '../State';\nimport {\n  CONTENT_TOUCHES_DELAY,\n  CONTENT_TOUCHES_QUICK_TAP_END_DELAY,\n} from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\n\nclass PressGestureHandler extends DiscreteGestureHandler {\n  get name() {\n    return 'press';\n  }\n\n  get minDurationMs() {\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Press;\n  }\n\n  shouldDelayTouches = true;\n\n  simulateCancelEvent(inputData) {\n    // Long press never starts so we can't rely on the running event boolean.\n    this.hasGestureFailed = true;\n    this.cancelEvent(inputData);\n  }\n\n  updateHasCustomActivationCriteria({ shouldCancelWhenOutside, maxDistSq }) {\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n  }\n\n  getState(type) {\n    return {\n      [Hammer.INPUT_START]: State.BEGAN,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.CANCELLED,\n    }[type];\n  }\n\n  getConfig() {\n    if (!this._hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  onGestureActivated(ev) {\n    this.onGestureStart(ev);\n  }\n\n  shouldDelayTouchForEvent({ pointerType }) {\n    // Don't disable event for mouse input\n    return this.shouldDelayTouches && pointerType === 'touch';\n  }\n\n  onGestureStart(ev) {\n    this.isGestureRunning = true;\n    clearTimeout(this.visualFeedbackTimer);\n    this.initialEvent = ev;\n    this.visualFeedbackTimer = fireAfterInterval(() => {\n      this.sendGestureStartedEvent(this.initialEvent);\n      this.initialEvent = null;\n    }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n  }\n\n  sendGestureStartedEvent(ev) {\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.sendEvent({\n      ...ev,\n      eventType: Hammer.INPUT_MOVE,\n      isFirst: true,\n    });\n  }\n\n  forceInvalidate(event) {\n    super.forceInvalidate(event);\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.initialEvent = null;\n  }\n\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (ev.isFinal && this.isGestureRunning) {\n      let timeout;\n      if (this.visualFeedbackTimer) {\n        // Aesthetic timing for a quick tap.\n        // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n        // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n        timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }\n      fireAfterInterval(() => {\n        this.sendEvent({\n          ...ev,\n          eventType: Hammer.INPUT_END,\n          isFinal: true,\n        });\n        this.onGestureEnded();\n      }, timeout);\n    }\n  }\n\n  updateGestureConfig({\n    shouldActivateOnStart = false,\n    disallowInterruption = false,\n    shouldCancelWhenOutside = true,\n    minDurationMs = Number.NaN,\n    maxDist = Number.NaN,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldActivateOnStart,\n      disallowInterruption,\n      shouldCancelWhenOutside,\n      minDurationMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n}\nexport default PressGestureHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}