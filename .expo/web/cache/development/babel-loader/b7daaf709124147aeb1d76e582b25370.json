{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoadFontsTask = exports.LoadAssetsTask = exports.AppLoading = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wks\\\\reactnative\\\\prueba\\\\kitten2\\\\src\\\\app\\\\app-loading.component.rn.tsx\";\n\nvar LoadFontsTask = function LoadFontsTask(fonts) {\n  var message = ['There is no need to use this task in Bare RN Project.', 'Use `react-native.config.js', 'Documentation: https://github.com/react-native-community/cli/blob/master/docs/configuration.md'].join('\\n');\n  console.warn(message);\n  return Promise.resolve(null);\n};\n\nexports.LoadFontsTask = LoadFontsTask;\n\nvar LoadAssetsTask = function LoadAssetsTask(assets) {\n  var message = ['There is no need to use this task in Bare RN Project.', 'Use `react-native.config.js', 'Documentation: https://github.com/react-native-community/cli/blob/master/docs/configuration.md'].join('\\n');\n  console.warn(message);\n  return Promise.resolve(null);\n};\n\nexports.LoadAssetsTask = LoadAssetsTask;\n\nvar AppLoading = function AppLoading(props) {\n  var _React$useState = _react.default.useState(true),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var loadingResult = props.initialConfig || {};\n\n  var onTasksFinish = function onTasksFinish() {\n    setLoading(false);\n  };\n\n  _react.default.useEffect(function () {\n    if (loading) {\n      startTasks().then(onTasksFinish);\n    }\n  }, [loading]);\n\n  var saveTaskResult = function saveTaskResult(result) {\n    if (result) {\n      loadingResult[result[0]] = result[1];\n    }\n  };\n\n  var createRunnableTask = function createRunnableTask(task) {\n    return task().then(saveTaskResult);\n  };\n\n  var startTasks = function startTasks() {\n    return _regenerator.default.async(function startTasks$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!props.tasks) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.all(props.tasks.map(createRunnableTask)));\n\n          case 2:\n            return _context.abrupt(\"return\", Promise.resolve());\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, !loading && props.children(loadingResult), props.placeholder && props.placeholder({\n    loading: loading\n  }));\n};\n\nexports.AppLoading = AppLoading;","map":{"version":3,"names":["LoadFontsTask","fonts","message","join","console","warn","Promise","resolve","LoadAssetsTask","assets","AppLoading","props","React","useState","loading","setLoading","loadingResult","initialConfig","onTasksFinish","useEffect","startTasks","then","saveTaskResult","result","createRunnableTask","task","tasks","all","map","children","placeholder"],"sources":["C:/wks/reactnative/prueba/kitten2/src/app/app-loading.component.rn.tsx"],"sourcesContent":["import React from 'react';\nimport { Task, TaskResult } from './app-loading.component';\n\nexport interface ApplicationLoaderProps {\n  tasks?: Task[];\n  initialConfig?: Record<string, any>;\n  placeholder?: (props: { loading: boolean }) => React.ReactElement;\n  children: (config: any) => React.ReactElement;\n}\n\nexport const LoadFontsTask = (fonts: { [key: string]: number }): Promise<TaskResult> => {\n  const message: string = [\n    'There is no need to use this task in Bare RN Project.',\n    'Use `react-native.config.js',\n    'Documentation: https://github.com/react-native-community/cli/blob/master/docs/configuration.md',\n  ].join('\\n');\n\n  console.warn(message);\n\n  return Promise.resolve(null);\n};\n\nexport const LoadAssetsTask = (assets: number[]): Promise<TaskResult> => {\n  const message: string = [\n    'There is no need to use this task in Bare RN Project.',\n    'Use `react-native.config.js',\n    'Documentation: https://github.com/react-native-community/cli/blob/master/docs/configuration.md',\n  ].join('\\n');\n\n  console.warn(message);\n\n  return Promise.resolve(null);\n};\n\n/**\n * Loads application configuration and returns content of the application when done.\n *\n * @property {Task[]} tasks - Array of tasks to prepare application before it's loaded.\n * A single task should return a Promise with value and a by which this value is accessible.\n *\n * @property {any} fallback - Fallback configuration that is used as default application configuration.\n * May be useful at first run.\n *\n * @property {(props: { loaded: boolean }) => React.ReactElement} placeholder - Element to render\n * while application is loading.\n *\n * @property {(result: any) => React.ReactElement} children - Should return Application component\n */\nexport const AppLoading = (props: ApplicationLoaderProps): React.ReactElement => {\n\n  const [loading, setLoading] = React.useState<boolean>(true);\n  const loadingResult = props.initialConfig || {};\n\n  const onTasksFinish = (): void => {\n    setLoading(false);\n  };\n\n  React.useEffect(() => {\n    if (loading) {\n      startTasks().then(onTasksFinish);\n    }\n  }, [loading]);\n\n  const saveTaskResult = (result: [string, any] | null): void => {\n    if (result) {\n      loadingResult[result[0]] = result[1];\n    }\n  };\n\n  const createRunnableTask = (task: Task): Promise<void> => {\n    return task().then(saveTaskResult);\n  };\n\n  const startTasks = async (): Promise<any> => {\n    if (props.tasks) {\n      return Promise.all(props.tasks.map(createRunnableTask));\n    }\n    return Promise.resolve();\n  };\n\n  return (\n    <React.Fragment>\n      {!loading && props.children(loadingResult)}\n      {props.placeholder && props.placeholder({ loading })}\n    </React.Fragment>\n  );\n};\n"],"mappings":";;;;;;;;;;;AAAA;;;;;AAUO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAA2D;EACtF,IAAMC,OAAe,GAAG,CACtB,uDADsB,EAEtB,6BAFsB,EAGtB,gGAHsB,EAItBC,IAJsB,CAIjB,IAJiB,CAAxB;EAMAC,OAAO,CAACC,IAAR,CAAaH,OAAb;EAEA,OAAOI,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD,CAVM;;;;AAYA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAA2C;EACvE,IAAMP,OAAe,GAAG,CACtB,uDADsB,EAEtB,6BAFsB,EAGtB,gGAHsB,EAItBC,IAJsB,CAIjB,IAJiB,CAAxB;EAMAC,OAAO,CAACC,IAAR,CAAaH,OAAb;EAEA,OAAOI,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD,CAVM;;;;AA0BA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAuD;EAE/E,sBAA8BC,cAAA,CAAMC,QAAN,CAAwB,IAAxB,CAA9B;EAAA;EAAA,IAAOC,OAAP;EAAA,IAAgBC,UAAhB;;EACA,IAAMC,aAAa,GAAGL,KAAK,CAACM,aAAN,IAAuB,EAA7C;;EAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAY;IAChCH,UAAU,CAAC,KAAD,CAAV;EACD,CAFD;;EAIAH,cAAA,CAAMO,SAAN,CAAgB,YAAM;IACpB,IAAIL,OAAJ,EAAa;MACXM,UAAU,GAAGC,IAAb,CAAkBH,aAAlB;IACD;EACF,CAJD,EAIG,CAACJ,OAAD,CAJH;;EAMA,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAwC;IAC7D,IAAIA,MAAJ,EAAY;MACVP,aAAa,CAACO,MAAM,CAAC,CAAD,CAAP,CAAb,GAA2BA,MAAM,CAAC,CAAD,CAAjC;IACD;EACF,CAJD;;EAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAA+B;IACxD,OAAOA,IAAI,GAAGJ,IAAP,CAAYC,cAAZ,CAAP;EACD,CAFD;;EAIA,IAAMF,UAAU,GAAG,SAAbA,UAAa;IAAA;MAAA;QAAA;UAAA;YAAA,KACbT,KAAK,CAACe,KADO;cAAA;cAAA;YAAA;;YAAA,iCAERpB,OAAO,CAACqB,GAAR,CAAYhB,KAAK,CAACe,KAAN,CAAYE,GAAZ,CAAgBJ,kBAAhB,CAAZ,CAFQ;;UAAA;YAAA,iCAIVlB,OAAO,CAACC,OAAR,EAJU;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAnB;;EAOA,OACE,6BAAC,cAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACO,OAAD,IAAYH,KAAK,CAACkB,QAAN,CAAeb,aAAf,CADf,EAEGL,KAAK,CAACmB,WAAN,IAAqBnB,KAAK,CAACmB,WAAN,CAAkB;IAAEhB,OAAO,EAAPA;EAAF,CAAlB,CAFxB,CADF;AAMD,CAtCM"},"metadata":{},"sourceType":"script"}