{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppStorage = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar MAPPING_KEY = 'mapping';\nvar THEME_KEY = 'theme';\nvar AppStorage = (0, _createClass2.default)(function AppStorage() {\n  (0, _classCallCheck2.default)(this, AppStorage);\n});\nexports.AppStorage = AppStorage;\n\nAppStorage.getMapping = function (fallback) {\n  return _asyncStorage.default.getItem(MAPPING_KEY).then(function (mapping) {\n    return mapping || fallback;\n  });\n};\n\nAppStorage.getTheme = function (fallback) {\n  return _asyncStorage.default.getItem(THEME_KEY).then(function (theme) {\n    return theme || fallback;\n  });\n};\n\nAppStorage.setMapping = function (mapping) {\n  return _asyncStorage.default.setItem(MAPPING_KEY, mapping);\n};\n\nAppStorage.setTheme = function (theme) {\n  return _asyncStorage.default.setItem(THEME_KEY, theme);\n};","map":{"version":3,"names":["MAPPING_KEY","THEME_KEY","AppStorage","getMapping","fallback","AsyncStorage","getItem","then","mapping","getTheme","theme","setMapping","setItem","setTheme"],"sources":["C:/wks/reactnative/prueba/kitten2/src/services/app-storage.service.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Mapping, Theme } from './theme.service';\n\nconst MAPPING_KEY: string = 'mapping';\nconst THEME_KEY: string = 'theme';\n\nexport class AppStorage {\n\n  static getMapping = (fallback?: Mapping): Promise<Mapping> => {\n    return AsyncStorage.getItem(MAPPING_KEY).then((mapping: Mapping) => {\n      return mapping || fallback;\n    });\n  };\n\n  static getTheme = (fallback?: Theme): Promise<Theme> => {\n    return AsyncStorage.getItem(THEME_KEY).then((theme: Theme) => {\n      return theme || fallback;\n    });\n  };\n\n  static setMapping = (mapping: Mapping): Promise<void> => {\n    return AsyncStorage.setItem(MAPPING_KEY, mapping);\n  };\n\n  static setTheme = (theme: Theme): Promise<void> => {\n    return AsyncStorage.setItem(THEME_KEY, theme);\n  };\n}\n"],"mappings":";;;;;;;;;;;AAAA;;AAGA,IAAMA,WAAmB,GAAG,SAA5B;AACA,IAAMC,SAAiB,GAAG,OAA1B;IAEaC,U;;;;;AAAAA,U,CAEJC,U,GAAa,UAACC,QAAD,EAA0C;EAC5D,OAAOC,qBAAA,CAAaC,OAAb,CAAqBN,WAArB,EAAkCO,IAAlC,CAAuC,UAACC,OAAD,EAAsB;IAClE,OAAOA,OAAO,IAAIJ,QAAlB;EACD,CAFM,CAAP;AAGD,C;;AANUF,U,CAQJO,Q,GAAW,UAACL,QAAD,EAAsC;EACtD,OAAOC,qBAAA,CAAaC,OAAb,CAAqBL,SAArB,EAAgCM,IAAhC,CAAqC,UAACG,KAAD,EAAkB;IAC5D,OAAOA,KAAK,IAAIN,QAAhB;EACD,CAFM,CAAP;AAGD,C;;AAZUF,U,CAcJS,U,GAAa,UAACH,OAAD,EAAqC;EACvD,OAAOH,qBAAA,CAAaO,OAAb,CAAqBZ,WAArB,EAAkCQ,OAAlC,CAAP;AACD,C;;AAhBUN,U,CAkBJW,Q,GAAW,UAACH,KAAD,EAAiC;EACjD,OAAOL,qBAAA,CAAaO,OAAb,CAAqBX,SAArB,EAAgCS,KAAhC,CAAP;AACD,C"},"metadata":{},"sourceType":"script"}