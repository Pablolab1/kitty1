{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.TOUCHABLE_STATE = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _GestureHandler = require(\"../GestureHandler\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _jsxFileName = \"C:\\\\wks\\\\reactnative\\\\prueba\\\\kitten2\\\\node_modules\\\\react-native-gesture-handler\\\\touchables\\\\GenericTouchable.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2\n};\nexports.TOUCHABLE_STATE = TOUCHABLE_STATE;\nvar PublicPropTypes = {\n  accessible: _propTypes.default.bool,\n  accessibilityLabel: _propTypes.default.node,\n  accessibilityHint: _propTypes.default.string,\n  hitSlop: _propTypes.default.shape({\n    top: _propTypes.default.number,\n    left: _propTypes.default.number,\n    bottom: _propTypes.default.number,\n    right: _propTypes.default.number\n  }),\n  disabled: _propTypes.default.bool,\n  onPress: _propTypes.default.func,\n  onPressIn: _propTypes.default.func,\n  onPressOut: _propTypes.default.func,\n  onLayout: _propTypes.default.func,\n  onLongPress: _propTypes.default.func,\n  nativeID: _propTypes.default.string,\n  testID: _propTypes.default.string,\n  delayPressIn: _propTypes.default.number,\n  delayPressOut: _propTypes.default.number,\n  delayLongPress: _propTypes.default.number,\n  shouldActivateOnStart: _propTypes.default.bool,\n  disallowInterruption: _propTypes.default.bool\n};\nvar InternalPropTypes = {\n  extraButtonProps: _propTypes.default.object,\n  onStateChange: _propTypes.default.func\n};\n\nvar GenericTouchable = function (_Component) {\n  (0, _inherits2.default)(GenericTouchable, _Component);\n\n  var _super = _createSuper(GenericTouchable);\n\n  function GenericTouchable() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, GenericTouchable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.longPressDetected = false;\n    _this.pointerInside = true;\n    _this.STATE = TOUCHABLE_STATE.UNDETERMINED;\n\n    _this.onGestureEvent = function (_ref) {\n      var pointerInside = _ref.nativeEvent.pointerInside;\n\n      if (_this.pointerInside !== pointerInside) {\n        if (pointerInside) {\n          _this.onMoveIn();\n        } else {\n          _this.onMoveOut();\n        }\n      }\n\n      _this.pointerInside = pointerInside;\n    };\n\n    _this.onHandlerStateChange = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      var state = nativeEvent.state;\n\n      if (state === _GestureHandler.State.CANCELLED || state === _GestureHandler.State.FAILED) {\n        _this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      } else if (state === (_reactNative.Platform.OS !== 'android' ? _GestureHandler.State.ACTIVE : _GestureHandler.State.BEGAN) && _this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        _this.handlePressIn();\n      } else if (state === _GestureHandler.State.END) {\n        var shouldCallOnPress = !_this.longPressDetected && _this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE && _this.pressOutTimeout === null;\n\n        _this.handleGoToUndetermined();\n\n        if (shouldCallOnPress) {\n          _this.props.onPress && _this.props.onPress();\n        }\n      }\n    };\n\n    _this.onLongPressDetected = function () {\n      _this.longPressDetected = true;\n\n      _this.props.onLongPress();\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(GenericTouchable, [{\n    key: \"handlePressIn\",\n    value: function handlePressIn() {\n      var _this2 = this;\n\n      if (this.props.delayPressIn) {\n        this.pressInTimeout = setTimeout(function () {\n          _this2.moveToState(TOUCHABLE_STATE.BEGAN);\n\n          _this2.pressInTimeout = null;\n        }, this.props.delayPressIn);\n      } else {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n\n      if (this.props.onLongPress) {\n        var time = (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n        this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n      }\n    }\n  }, {\n    key: \"handleMoveOutside\",\n    value: function handleMoveOutside() {\n      var _this3 = this;\n\n      if (this.props.delayPressOut) {\n        this.pressOutTimeout = this.pressOutTimeout || setTimeout(function () {\n          _this3.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n\n          _this3.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n      } else {\n        this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n      }\n    }\n  }, {\n    key: \"handleGoToUndetermined\",\n    value: function handleGoToUndetermined() {\n      var _this4 = this;\n\n      clearTimeout(this.pressOutTimeout);\n\n      if (this.props.delayPressOut) {\n        this.pressOutTimeout = setTimeout(function () {\n          if (_this4.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n            _this4.moveToState(TOUCHABLE_STATE.BEGAN);\n          }\n\n          _this4.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n\n          _this4.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n      } else {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.reset();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.longPressDetected = false;\n      this.pointerInside = true;\n      clearTimeout(this.pressInTimeout);\n      clearTimeout(this.pressOutTimeout);\n      clearTimeout(this.longPressTimeout);\n      this.pressOutTimeout = null;\n      this.longPressTimeout = null;\n      this.pressInTimeout = null;\n    }\n  }, {\n    key: \"moveToState\",\n    value: function moveToState(newState) {\n      if (newState === this.STATE) {\n        return;\n      }\n\n      if (newState === TOUCHABLE_STATE.BEGAN) {\n        this.props.onPressIn && this.props.onPressIn();\n      } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        this.props.onPressOut && this.props.onPressOut();\n      } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n        this.reset();\n\n        if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n          this.props.onPressOut && this.props.onPressOut();\n        }\n      }\n\n      this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\n      this.STATE = newState;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.reset();\n    }\n  }, {\n    key: \"onMoveIn\",\n    value: function onMoveIn() {\n      if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n    }\n  }, {\n    key: \"onMoveOut\",\n    value: function onMoveOut() {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = null;\n\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        this.handleMoveOutside();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var coreProps = {\n        accessible: this.props.accessible !== false,\n        accessibilityLabel: this.props.accessibilityLabel,\n        accessibilityHint: this.props.accessibilityHint,\n        accessibilityComponentType: this.props.accessibilityComponentType,\n        accessibilityRole: this.props.accessibilityRole,\n        accessibilityStates: this.props.accessibilityStates,\n        accessibilityTraits: this.props.accessibilityTraits,\n        nativeID: this.props.nativeID,\n        onLayout: this.props.onLayout,\n        hitSlop: this.props.hitSlop\n      };\n      return _react.default.createElement(_GestureHandler.BaseButton, (0, _extends2.default)({\n        style: this.props.containerStyle,\n        onHandlerStateChange: this.props.disabled ? null : this.onHandlerStateChange,\n        onGestureEvent: this.onGestureEvent,\n        hitSlop: this.props.hitSlop,\n        shouldActivateOnStart: this.props.shouldActivateOnStart,\n        disallowInterruption: this.props.disallowInterruption,\n        testID: this.props.testID\n      }, this.props.extraButtonProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 7\n        }\n      }), _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({}, coreProps, {\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }\n      }), this.props.children));\n    }\n  }]);\n  return GenericTouchable;\n}(_react.Component);\n\nexports.default = GenericTouchable;\nGenericTouchable.publicPropTypes = PublicPropTypes;\nGenericTouchable.internalPropTypes = InternalPropTypes;\nGenericTouchable.propTypes = _objectSpread(_objectSpread({}, InternalPropTypes), PublicPropTypes);\nGenericTouchable.defaultProps = {\n  delayLongPress: 600,\n  extraButtonProps: {\n    rippleColor: 'transparent'\n  }\n};","map":{"version":3,"names":["TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","PublicPropTypes","accessible","PropTypes","bool","accessibilityLabel","node","accessibilityHint","string","hitSlop","shape","top","number","left","bottom","right","disabled","onPress","func","onPressIn","onPressOut","onLayout","onLongPress","nativeID","testID","delayPressIn","delayPressOut","delayLongPress","shouldActivateOnStart","disallowInterruption","InternalPropTypes","extraButtonProps","object","onStateChange","GenericTouchable","longPressDetected","pointerInside","STATE","onGestureEvent","nativeEvent","onMoveIn","onMoveOut","onHandlerStateChange","state","State","CANCELLED","FAILED","moveToState","Platform","OS","ACTIVE","handlePressIn","END","shouldCallOnPress","pressOutTimeout","handleGoToUndetermined","props","onLongPressDetected","pressInTimeout","setTimeout","time","longPressTimeout","clearTimeout","reset","newState","handleMoveOutside","coreProps","accessibilityComponentType","accessibilityRole","accessibilityStates","accessibilityTraits","containerStyle","style","children","Component","publicPropTypes","internalPropTypes","propTypes","defaultProps","rippleColor"],"sources":["C:/wks/reactnative/prueba/kitten2/node_modules/react-native-gesture-handler/touchables/GenericTouchable.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { State, BaseButton } from '../GestureHandler';\nimport PropTypes from 'prop-types';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n};\n\nconst PublicPropTypes = {\n  // Decided to drop not used fields from RN's implementation.\n  // e.g. onBlur and onFocus as well as deprecated props.\n  accessible: PropTypes.bool,\n  accessibilityLabel: PropTypes.node,\n  accessibilityHint: PropTypes.string,\n  hitSlop: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number,\n  }),\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLayout: PropTypes.func,\n  onLongPress: PropTypes.func,\n  nativeID: PropTypes.string,\n  testID: PropTypes.string,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number,\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool,\n};\n\nconst InternalPropTypes = {\n  extraButtonProps: PropTypes.object,\n  onStateChange: PropTypes.func,\n};\n\n/**\n * GenericTouchable is not intented to be used as it.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component {\n  static publicPropTypes = PublicPropTypes;\n  static internalPropTypes = InternalPropTypes;\n\n  // The prop type collections have to be outside of the class, as metro\n  // at this time does not compile `this.foo` correctly if HMR is enabled.\n  // https://github.com/software-mansion/react-native-gesture-handler/pull/406#issuecomment-453779977\n  static propTypes = {\n    ...InternalPropTypes,\n    ...PublicPropTypes,\n  };\n\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n    },\n  };\n\n  // timeout handlers\n  pressInTimeout;\n  pressOutTimeout;\n  longPressTimeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout);\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout);\n    clearTimeout(this.pressOutTimeout);\n    clearTimeout(this.longPressTimeout);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn && this.props.onPressIn();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut && this.props.onPressOut();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut && this.props.onPressOut();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({ nativeEvent: { pointerInside } }) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({ nativeEvent }) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress && this.props.onPress();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress();\n  };\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // long press should no longer be detected\n    clearTimeout(this.longPressTimeout);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          this.props.disabled ? null : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={this.props.hitSlop}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        testID={this.props.testID}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}