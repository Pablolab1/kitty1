{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IconScreen = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _iconShowcase = require(\"./icon-showcase.component\");\n\nvar _type = require(\"./type\");\n\nvar _showcaseContainer = require(\"../../../components/showcase-container.component\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wks\\\\reactnative\\\\prueba\\\\kitten2\\\\src\\\\scenes\\\\components\\\\icon\\\\icon.component.tsx\";\n\nvar IconScreen = function IconScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var renderItem = function renderItem(props) {\n    return _react.default.createElement(_iconShowcase.IconShowcase, (0, _extends2.default)({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  return _react.default.createElement(_showcaseContainer.ShowcaseContainer, {\n    showcase: _type.iconShowcase,\n    settings: _type.iconSettings,\n    renderItem: renderItem,\n    onBackPress: navigation.goBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  });\n};\n\nexports.IconScreen = IconScreen;","map":{"version":3,"names":["IconScreen","navigation","renderItem","props","iconShowcase","iconSettings","goBack"],"sources":["C:/wks/reactnative/prueba/kitten2/src/scenes/components/icon/icon.component.tsx"],"sourcesContent":["import React from 'react';\nimport { IconElement, IconProps } from '@ui-kitten/components';\nimport { IconShowcase } from './icon-showcase.component';\nimport { iconSettings, iconShowcase } from './type';\nimport { ShowcaseContainer } from '../../../components/showcase-container.component';\n\nexport const IconScreen = ({ navigation }): React.ReactElement => {\n\n  const renderItem = (props: IconProps): IconElement => (\n    <IconShowcase {...props} />\n  );\n\n  return (\n    <ShowcaseContainer\n      showcase={iconShowcase}\n      settings={iconSettings}\n      renderItem={renderItem}\n      onBackPress={navigation.goBack}\n    />\n  );\n};\n\n"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;;AAEO,IAAMA,UAAU,GAAG,SAAbA,UAAa,OAAwC;EAAA,IAArCC,UAAqC,QAArCA,UAAqC;;EAEhE,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD;IAAA,OACjB,6BAAC,0BAAD,6BAAkBA,KAAlB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GADiB;EAAA,CAAnB;;EAIA,OACE,6BAAC,oCAAD;IACE,QAAQ,EAAEC,kBADZ;IAEE,QAAQ,EAAEC,kBAFZ;IAGE,UAAU,EAAEH,UAHd;IAIE,WAAW,EAAED,UAAU,CAACK,MAJ1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF;AAQD,CAdM"},"metadata":{},"sourceType":"script"}