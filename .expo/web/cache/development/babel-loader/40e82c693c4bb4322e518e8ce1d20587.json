{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = BottomTabBar;\nexports.getTabBarHeight = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _BottomTabItem = _interopRequireDefault(require(\"./BottomTabItem\"));\n\nvar _BottomTabBarHeightCallbackContext = _interopRequireDefault(require(\"../utils/BottomTabBarHeightCallbackContext\"));\n\nvar _useWindowDimensions = _interopRequireDefault(require(\"../utils/useWindowDimensions\"));\n\nvar _useIsKeyboardShown = _interopRequireDefault(require(\"../utils/useIsKeyboardShown\"));\n\nvar _excluded = [\"dimensions\", \"insets\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar DEFAULT_TABBAR_HEIGHT = 49;\nvar COMPACT_TABBAR_HEIGHT = 32;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = _reactNative.Platform.OS !== 'web';\n\nvar shouldUseHorizontalLabels = function shouldUseHorizontalLabels(_ref) {\n  var state = _ref.state,\n      layout = _ref.layout,\n      dimensions = _ref.dimensions,\n      _ref$adaptive = _ref.adaptive,\n      adaptive = _ref$adaptive === void 0 ? true : _ref$adaptive,\n      labelPosition = _ref.labelPosition,\n      tabStyle = _ref.tabStyle;\n\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n\n  if (!adaptive) {\n    return false;\n  }\n\n  if (layout.width >= 768) {\n    var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n    var flattenedStyle = _reactNative.StyleSheet.flatten(tabStyle);\n\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nvar getPaddingBottom = function getPaddingBottom(insets) {\n  return Math.max(insets.bottom - _reactNative.Platform.select({\n    ios: 4,\n    default: 0\n  }), 0);\n};\n\nvar getTabBarHeight = function getTabBarHeight(_ref2) {\n  var dimensions = _ref2.dimensions,\n      insets = _ref2.insets,\n      style = _ref2.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded);\n\n  var _StyleSheet$flatten;\n\n  var customHeight = (_StyleSheet$flatten = _reactNative.StyleSheet.flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  var isLandscape = dimensions.width > dimensions.height;\n  var horizontalLabels = shouldUseHorizontalLabels(_objectSpread({\n    dimensions: dimensions\n  }, rest));\n  var paddingBottom = getPaddingBottom(insets);\n\n  if (_reactNative.Platform.OS === 'ios' && !_reactNative.Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexports.getTabBarHeight = getTabBarHeight;\n\nfunction BottomTabBar(_ref3) {\n  var state = _ref3.state,\n      navigation = _ref3.navigation,\n      descriptors = _ref3.descriptors,\n      activeBackgroundColor = _ref3.activeBackgroundColor,\n      activeTintColor = _ref3.activeTintColor,\n      adaptive = _ref3.adaptive,\n      allowFontScaling = _ref3.allowFontScaling,\n      inactiveBackgroundColor = _ref3.inactiveBackgroundColor,\n      inactiveTintColor = _ref3.inactiveTintColor,\n      _ref3$keyboardHidesTa = _ref3.keyboardHidesTabBar,\n      keyboardHidesTabBar = _ref3$keyboardHidesTa === void 0 ? false : _ref3$keyboardHidesTa,\n      labelPosition = _ref3.labelPosition,\n      labelStyle = _ref3.labelStyle,\n      iconStyle = _ref3.iconStyle,\n      safeAreaInsets = _ref3.safeAreaInsets,\n      showLabel = _ref3.showLabel,\n      style = _ref3.style,\n      tabStyle = _ref3.tabStyle;\n\n  var _safeAreaInsets$top, _safeAreaInsets$right, _safeAreaInsets$botto, _safeAreaInsets$left;\n\n  var _useTheme = (0, _native.useTheme)(),\n      colors = _useTheme.colors;\n\n  var buildLink = (0, _native.useLinkBuilder)();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var dimensions = (0, _useWindowDimensions.default)();\n  var isKeyboardShown = (0, _useIsKeyboardShown.default)();\n\n  var onHeightChange = _react.default.useContext(_BottomTabBarHeightCallbackContext.default);\n\n  var shouldShowTabBar = focusedOptions.tabBarVisible !== false && !(keyboardHidesTabBar && isKeyboardShown);\n\n  var visibilityAnimationConfigRef = _react.default.useRef(focusedOptions.tabBarVisibilityAnimationConfig);\n\n  _react.default.useEffect(function () {\n    visibilityAnimationConfigRef.current = focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  var _React$useState = _react.default.useState(!shouldShowTabBar),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isTabBarHidden = _React$useState2[0],\n      setIsTabBarHidden = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState(function () {\n    return new _reactNative.Animated.Value(shouldShowTabBar ? 1 : 0);\n  }),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 1),\n      visible = _React$useState4[0];\n\n  _react.default.useEffect(function () {\n    var visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n\n      var animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n      animation(visible, _objectSpread({\n        toValue: 1,\n        useNativeDriver: useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)).start(function (_ref4) {\n        var finished = _ref4.finished;\n\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n\n      setIsTabBarHidden(true);\n\n      var _animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n\n      _animation(visible, _objectSpread({\n        toValue: 0,\n        useNativeDriver: useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  var _React$useState5 = _react.default.useState({\n    height: 0,\n    width: dimensions.width\n  }),\n      _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n      layout = _React$useState6[0],\n      setLayout = _React$useState6[1];\n\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n        height = _e$nativeEvent$layout.height,\n        width = _e$nativeEvent$layout.width;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n\n  var routes = state.routes;\n  var defaultInsets = (0, _reactNativeSafeAreaContext.useSafeArea)();\n  var insets = {\n    top: (_safeAreaInsets$top = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) !== null && _safeAreaInsets$top !== void 0 ? _safeAreaInsets$top : defaultInsets.top,\n    right: (_safeAreaInsets$right = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _safeAreaInsets$right !== void 0 ? _safeAreaInsets$right : defaultInsets.right,\n    bottom: (_safeAreaInsets$botto = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _safeAreaInsets$botto !== void 0 ? _safeAreaInsets$botto : defaultInsets.bottom,\n    left: (_safeAreaInsets$left = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _safeAreaInsets$left !== void 0 ? _safeAreaInsets$left : defaultInsets.left\n  };\n  var paddingBottom = getPaddingBottom(insets);\n  var tabBarHeight = getTabBarHeight({\n    state: state,\n    insets: insets,\n    dimensions: dimensions,\n    layout: layout,\n    adaptive: adaptive,\n    labelPosition: labelPosition,\n    tabStyle: tabStyle,\n    style: style\n  });\n  var hasHorizontalLabels = shouldUseHorizontalLabels({\n    state: state,\n    dimensions: dimensions,\n    layout: layout,\n    adaptive: adaptive,\n    labelPosition: labelPosition,\n    tabStyle: tabStyle\n  });\n  return _react.default.createElement(_reactNative.Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + _reactNative.StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom: paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, style],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: handleLayout\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.content\n  }, routes.map(function (route, index) {\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, _native.CommonActions.navigate(route.name)), {}, {\n          target: state.key\n        }));\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' ? \"\".concat(label, \", tab, \").concat(index + 1, \" of \").concat(routes.length) : undefined;\n    return _react.default.createElement(_native.NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, _react.default.createElement(_native.NavigationRouteContext.Provider, {\n      value: route\n    }, _react.default.createElement(_BottomTabItem.default, {\n      route: route,\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: allowFontScaling,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      activeBackgroundColor: activeBackgroundColor,\n      inactiveBackgroundColor: inactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: options.tabBarIcon,\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: showLabel,\n      labelStyle: labelStyle,\n      iconStyle: iconStyle,\n      style: tabStyle\n    })));\n  })));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: _reactNative.StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["BottomTabBar.tsx"],"names":["DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","shouldUseHorizontalLabels","adaptive","tabStyle","labelPosition","layout","maxTabItemWidth","flattenedStyle","StyleSheet","state","dimensions","getPaddingBottom","insets","ios","default","getTabBarHeight","rest","customHeight","isLandscape","horizontalLabels","paddingBottom","keyboardHidesTabBar","colors","buildLink","focusedRoute","focusedDescriptor","descriptors","focusedOptions","isKeyboardShown","onHeightChange","React","shouldShowTabBar","visibilityAnimationConfigRef","Animated","visibilityAnimationConfig","animation","toValue","duration","finished","setIsTabBarHidden","height","width","handleLayout","e","setLayout","routes","defaultInsets","top","safeAreaInsets","right","bottom","left","tabBarHeight","style","hasHorizontalLabels","styles","backgroundColor","borderTopColor","border","transform","translateY","inputRange","outputRange","position","isTabBarHidden","paddingHorizontal","Math","content","focused","index","options","route","onPress","event","type","target","canPreventDefault","navigation","CommonActions","key","onLongPress","label","accessibilityLabel","tabBar","borderTopWidth","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  TabNavigationState,\n  ParamListBase,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea, EdgeInsets } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps, LabelPosition } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n  tabStyle: StyleProp<ViewStyle>;\n  labelPosition: LabelPosition | undefined;\n  adaptive: boolean | undefined;\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  layout,\n  dimensions,\n  adaptive = true,\n  labelPosition,\n  tabStyle,\n}: Options) => {\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n\n  if (!adaptive) {\n    return false;\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n    const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({ dimensions, ...rest });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    focusedOptions.tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current =\n      focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    insets,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n    style,\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n  });\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}