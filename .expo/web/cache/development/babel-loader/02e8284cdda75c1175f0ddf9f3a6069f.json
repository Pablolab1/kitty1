{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RangeDatepickerShowcase = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _components = require(\"@ui-kitten/components\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wks\\\\reactnative\\\\prueba\\\\kitten2\\\\src\\\\scenes\\\\components\\\\range-datepicker\\\\range-datepicker-showcase.component.tsx\";\n\nvar RangeDatepickerShowcase = function RangeDatepickerShowcase(props) {\n  var _React$useState = _react.default.useState({}),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      range = _React$useState2[0],\n      setRange = _React$useState2[1];\n\n  return _react.default.createElement(_components.RangeDatepicker, (0, _extends2.default)({}, props, {\n    style: styles.rangeDatepicker,\n    range: range,\n    onSelect: setRange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }));\n};\n\nexports.RangeDatepickerShowcase = RangeDatepickerShowcase;\n\nvar styles = _reactNative.StyleSheet.create({\n  rangeDatepicker: {\n    width: 200\n  }\n});","map":{"version":3,"names":["RangeDatepickerShowcase","props","React","useState","range","setRange","styles","rangeDatepicker","StyleSheet","create","width"],"sources":["C:/wks/reactnative/prueba/kitten2/src/scenes/components/range-datepicker/range-datepicker-showcase.component.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  CalendarRange,\n  RangeDatepicker,\n  RangeDatepickerElement,\n  RangeDatepickerProps,\n} from '@ui-kitten/components';\n\ntype RangeDatepickerShowcaseProps = Omit<RangeDatepickerProps, 'onSelect'>;\n\nexport const RangeDatepickerShowcase = (props: RangeDatepickerShowcaseProps): RangeDatepickerElement => {\n\n  const [range, setRange] = React.useState<CalendarRange<Date>>({});\n\n  return (\n    <RangeDatepicker\n      {...props}\n      style={styles.rangeDatepicker}\n      range={range}\n      onSelect={setRange}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  rangeDatepicker: {\n    width: 200,\n  },\n});\n\n"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;AASO,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAiE;EAEtG,sBAA0BC,cAAA,CAAMC,QAAN,CAAoC,EAApC,CAA1B;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAEA,OACE,6BAAC,2BAAD,6BACMJ,KADN;IAEE,KAAK,EAAEK,MAAM,CAACC,eAFhB;IAGE,KAAK,EAAEH,KAHT;IAIE,QAAQ,EAAEC,QAJZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADF;AAQD,CAZM;;;;AAcP,IAAMC,MAAM,GAAGE,uBAAA,CAAWC,MAAX,CAAkB;EAC/BF,eAAe,EAAE;IACfG,KAAK,EAAE;EADQ;AADc,CAAlB,CAAf"},"metadata":{},"sourceType":"script"}